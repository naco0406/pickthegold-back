{
  "week1": {
    "class2": [
      "# S-view\n## 프로젝트 소개\n연락처, 갤러리, 사진정보 총 3개의 탭이 있는 S-view는, 휴대폰 연락처와 갤러리에 쉽고 빠르게 접근할 수 있으며, 세부 검색 및 정보 조회, 수정이 가능한 Android Application 입니다.\n\n---\n\n## apk file\napk 다운로드 폴더: `app/release/app-release.apk` \n\n---\n\n## 1. 개발 팀원\n\n- 이하영 - UNIST 컴퓨터공학과 20학번\n- 양준원 - KAIST 산업공학과 22학번\n---\n## 2. 개발환경\n\n- Language: Kotlin\n- OS: Android\n\n```\nminSdkVersion 24\ntargetSdkVersion 33\n```\n\n- IDE: Android Studio\n- Target Device:GALAXY S10e\n- Version Control: Github\n- Design: Figma\n\n---\n\n## 3. 어플리케이션 소개\n### 0. 초기세팅\n\n<p align=\"center\" width=\"100%\">\n    <img src=\"https://github.com/lha0/madweek1/assets/78598160/5001fdcf-b22c-4ba0-b5ea-1c53b2897659\" alt=\"ScreenShot1\" width=\"40%\"/>\n    <img src=\"https://github.com/lha0/madweek1/assets/78598160/1275f72b-2410-49c9-a0db-e1e7d08f3dad\" alt=\"ScreenShot2\" width=\"40%\"/>\n</p>\n\n***Major features***\n\n- 연락처 접근 권한 설정\n- 갤러리 접근 권한 설정\n\n---\n\n***기술설명***\n\n- **핸드폰 내부 연락처 정보 가져오기**\n    - `ContactsContract API` 를 활용한 핸드폰 연락처 접근 및 서칭\n    \n- **핸드폰 이미지 접근하기**\n    - `mediaStore API` 를 활용한 External Stroage 이미지 ID 접근 및 서칭\n    - 글로벌 변수 리스트 (ImageIds, ImageList)를 활용한 사진 정보(URI, id 등) 저장\n \n---\n\n### TAB 1 - 연락처\n\n<p align=\"center\" width=\"100%\">\n    <img src=\"https://github.com/lha0/madweek1/assets/78598160/ca99b033-d576-4aa9-8daf-e9b57b75e06f\" alt=\"ScreenShot1\" width=\"40%\"/>\n    <img src=\"https://github.com/lha0/madweek1/assets/78598160/bd2a5c63-4a4b-4b1e-8968-f77ae6c95dde\" alt=\"ScreenShot2\" width=\"40%\"/>\n</p>\n    \n\n***Major features***\n\n> **보기 좋은 “연락처 추가 및 삭제 뷰어” 창**\n> \n- 핸드폰 내부 연락처 정보 띄우기\n- 연락처 추가하기\n- 연락처 위젯 길게 클릭해 연락처 삭제하기\n- 연락처 위젯 짧게 클릭 시 프로필 보기 & 전화 걸기 & 목록으로 돌아가기\n\n---\n\n***기술설명***\n\n- **핸드폰 내부 연락처 정보 가져오기**\n    - `ContactsContract API` 를 활용한 핸드폰 연락처 접근 및 서칭\n    \n- **연락처 목록**\n    - `PhoneNumberAdapter`를 활용해 `ListView`에 연락처를 하나씩 띄우기\n    \n- **연락처 추가하기**\n    - `Intent`를 활용해 연락처 추가\n    \n- **연락처 삭제하기**\n    - 연락처 길게 클릭 시, `AlertDialog`를 활용해 연락처 삭제 팝업 메시지 호출 & 삭제하기\n    \n- **프로필 확인**\n    - 연락처 짧게 클릭 시, `fragment transaction`을 활용해 Profile Fragment로 전환\n    - 사진, 이름, 전화번호, ‘목록으로’, ‘전화걸기’\n    \n- **연락처로 전화걸기**\n    - `Intent` 를 활용해 전화 다이얼로 연결\n\n---\n\n### TAB 2 - 갤러리\n\n<p align=\"center\" width=\"100%\">\n    <img src=\"https://github.com/lha0/madweek1/assets/78598160/ff80e028-380f-4683-8cd0-f0fc09afd877\" alt=\"ScreenShot3\" width=\"40%\"/>\n    <img src=\"https://github.com/lha0/madweek1/assets/78598160/c19d7225-29dd-4241-b148-507ed6ad432c\" alt=\"ScreenShot4\" width=\"40%\"/>\n</p>\n\n***Major features***\n\n> **깔끔한 기본 이미지 갤러리 뷰어**\n> \n- 사진 뷰 전환 스위치 (Recycler 뷰 ↔ 그리드 뷰)\n- 핸드폰 내부 이미지 폴더 접근(기본 갤러리 이용) 및 열기 플로팅 버튼\n- 촬영 날짜 필터 검색 텍스트 입력창\n\n---\n\n***기술 설명***\n\n- **핸드폰 이미지 접근하기**\n    - `mediaStore API` 를 활용한 External Stroage 이미지 ID 접근 및 서칭\n    - 글로벌 변수 리스트 (ImageIds, ImageList)를 활용한 사진 정보(URI, id 등) 저장\n    \n- **각 이미지 띄우기**\n    - `ImageAdapter` 로 각 개별 이미지마다 ImageVIew을 만들어 위젯 띄우기\n    - `Glide`를 통한 이미지 뷰 최적화\n        - 각 개별 이미지 크기 100, 100으로 중앙 부분 잘라서 맞춰 화질 낮춰 빠르게 이미지 불러오기\n    \n- **플로팅 버튼(+)로 폴더 접근하기**\n    - 갤러리 `Intent`를 활용한 이미지 파일 폴더 직접 접근 및 선택\n    \n- **촬영 날짜 필터 검색**\n    - 각 이미지 촬영 날짜 (ImageList의 date)와 editText와의 일치 여부를 통한 필터 검색\n    \n- **사진 정보 탭 넘어가기**\n    - ImageView 클릭 시 arguments로 `bundle` (Id, URI 등)을 넘겨주어 사진 세부 정보 탭으로 넘어가기\n\n---\n\n### TAB 3 - 사진 정보란\n\n![readme5](https://github.com/lha0/madweek1/assets/78598160/cc248618-e5be-42e3-b1bb-75cdd049505b)\n\n***Major features***\n\n> **간결하게 사진 세부 정보 보여주고 수정하기**\n> \n- 클릭한 사진의 제목, 날짜, 장소, 카메라 기종 보여주기\n- 사진 높은 화질로 크게 보여주기\n- 사진 제목 & 위치 클릭 시 내용 수정하기\n\n---\n\n***기술설명***\n\n- **이미지 URI 형식 별 띄우기**\n    - 이미지가 drawable 폴더 안에 있는 경우 Int형 주소로 띄우기\n    - *imageview.`setImageResource(imageAdress)`*\n    - 이미지가 external storage의 URI에 위치한 경우 String 주소를 parsing해 띄우기\n    - `*val uri = Uri.parse(imageAdress_gal)*`\n    - `*imageView.setImageURI(uri)*`\n\n- **사진 정보 띄우기**\n    - 사진 클릭 시 해당 사진의 id를 arguments로 넘겨받음\n    - 넘겨받은 id에 해당하는 사진 정보로 각 Textview의 text 설정하기\n\n- **사진 정보 수정하기**\n    - 사진 제목 & 위치 클릭 시 해당 textview의 field, 현재 이미지의 ID 전달하기\n    - 팝업 텍스트 입력 창에서 입력한 editText 대로 넘겨받은 이미지와 field에 해당하는 사진 정보 변경해서 글로벌 변수 리스트 imageList에 저장하기\n",
      "몰입캠프 1주차 프로젝트\n============================\n- 프로젝트 이름: 베이비로이드(Babyroid)\n- 팀원: 김동하, 송지효\n- APK : Babyroid.apk 설치\n\n  \n프로젝트 설명\n-------------------\nJetpack Compose를 이용해 모든 레이아웃을 구성했습니다.  \n기존에 설치되는 연락처, 갤러리 앱을 참고하여 비슷하게 구성해보려고 시도했습니다.  \nCompose를 이용해 다크/라이트 모드를 추가로 구현했습니다.  \n\nhttps://github.com/madcamp12/madcamp-week1/assets/64480531/f2f0bd3c-7012-4914-8cd4-3ea7a22dea58\n\n\n- Tab 1\n  \n  휴대폰의 연락처를 가져와 화면에 표시해줍니다.  \n  기존 연락처에 프로필 사진이 존재한다면, 이를 비트맵으로 표현해줍니다.  \n  연락처를 터치하면 '전화/문자/정보'를 볼 수 있는 레이아웃이 추가로 나타납니다. 전화, 문자 등의 기존 앱으로 이동할 수 있습니다.  \n  연락처가 몇 개나 표시되는지 보여주고 검색어를 입력할 때마다 동적으로 연락처 리스트가 달라집니다.\n  ![캡처](https://github.com/madcamp12/madcamp-week1/assets/64480531/15c98add-533f-403e-a87a-4c089e3e394d)\n  ![2](https://github.com/madcamp12/madcamp-week1/assets/64480531/336f7d26-9086-49e1-bc62-a1bc564d754d)\n\n\n- Tab 2\n\n  자신의 갤러리에서 좋아하는 사진을 등록할 수 있습니다.  \n  휴대폰의 갤러리에 접근해 사진을 추가/삭제 할 수 있고, 확대해서 볼 수 있습니다.  \n  앱의 내부 저장소를 이용해 파일을 저장하고, 이를 그려주는 방식으로 구현했습니다.\n  ![KakaoTalk_20240103_175524944_01](https://github.com/madcamp12/madcamp-week1/assets/64480531/a265c713-20e3-42b3-83ff-7a36e932be2b)\n\n\n- Tab 3\n\n  간단한 제비뽑기를 할 수 있는 탭입니다.  \n  최소 1명부터, 최대 10명까지 자유롭게 인원을 확대/축소하며 제비뽑기를 할 수 있습니다.  \n  기본 값은 \"후보 {숫자}\"의 형식이며, 이 값은 아무 텍스트도 입력하지 않은 경우에 활용됩니다.\n  \n  https://github.com/madcamp12/madcamp-week1/assets/64480531/bf7f7d0b-14a5-4876-8445-a8914196ca78\n\n\n    \n",
      "\n# MadEater\n\n어은동의 한식맛집을 소개하는 어플리케이션\n\n### ***************************************************************한식인의 취향에 답하다: 어은동 맛집앱 매드이터***************************************************************\n\n### 팀원\n\n- **개발자 강승완** KAIST 전산학부 19학번\n- **개발자 조서윤** 고려대학교 컴퓨터학과 22학번\n\n### 개발 환경\n\n- Android Studio\n- Java\n- Android\n\n## 전반적 기술 개요\n\n- 저희는 Java를 기반으로 안드로이드 앱 개발을 실시하였습니다. `Fragment`를 사용하여 각 탭간의 이동을 구현하였고, 각 탭 내에서는 상황에 맞는 `View` 와 `Adapter`을 통해 원하는 내용을 구현할 수 있었습니다. 각 탭 간에는 `DataUpdateListener`를 통해서 데이터를 교환하고 생명주기의 일부분을 관리하였습니다.  또한 `SQLiteOpenHelper`를 구현하여 정보를 저장할 수 있었습니다. 특히 탭2에서 갤러리내에서 이미지를 가져오기 위해 `intent`를 사용하였고, 탭3에서는 지도 기능을 구현하기 위해 `NaverMapSdk`를 이용하여 네이버지도 안드로이드 SDK를 가져올 수 있었습니다. 마지막으로 시작 화면의 경우 `Splash`를 이용하여 디자인하였습니다.\n\n### Tab1 | Contact\n\n**맛집 이름과 연락처를 한눈에 볼 수 있는 탭**\n\n- ListView 형태로 맛집 이름과 전화번호 연락처 보임\n- 연락처 클릭 시 맛집 이름, 전화번호, 해시태그, 사진을 볼 수 있는 상세정보 Fragment로 이동\n- 상세정보 Fragment에는 연락처 삭제, 수정, 전화, 문자 버튼이 있고, 각 버튼을 클릭하여 각 기능 수행 가능\n- 아래쪽의 + 버튼을 클릭하여 맛집을 추가하는 dialog를 띄울 수 있음\n\n### Tab2 | Image\n\n**음식 이미지를 보고 식당을 고를 수 있는 탭**\n\n- Gridview 형태로 음식 사진이 보임\n- 사진 클릭 시 사진 확대 창과 수정, 삭제 버튼이 있는 Fragment로 이동\n- 상세정보 Fragment에서 수정 버튼을 누르면 맛집 ListView를 선택할 수 있어 각 연락처의 사진 변경 가능\n- 아래쪽의 Gallery 버튼 클릭하여 갤러리에서 사진 추가 가능\n\n### Tab3 | Search\n\n**************************************맛집 이름과 연락처 (해시태그)를 검색할 수 있는 탭**************************************\n\n- 이름과 연락처를 검색하여 연락처 상세정보 Fragment로 바로 이동 가능\n\n### Tab4 | Map\n\n********************************************************************************************************************************지도에서 맛집을 선택하여 상세정보를 볼 수 있는 탭********************************************************************************************************************************\n\n- 지도의 Marker를 클릭하여 상세정보 Fragment로 바로 이동 가능\n",
      "# C.G.V\n\nContact / Gallery / Variety (game)를 한 번에!\n\n---\n\n![logo](https://github.com/siesdart/madcamp-week1/assets/91830035/2a2d5a39-f0b5-46af-9bff-50df9dd7ada5)\n\n> C.G.V 는 Contact, Gallery, Variety의 약자로, 이용자에게 연락처, 갤러리, 게임 등의 기능을 통해 편리함과 즐거움을 제공하는 어플리케이션입니다.\n\n\n\n## 1. 팀원\n|이름|소속|Github|\n|---|---|---|\n|🐰 김선희|한양대학교 컴퓨터소프트웨어학부|<a href=\"https://github.com/sunnygeem\" target=\"_blank\"><img src=\"https://img.shields.io/badge/GitHub-181717?style=flat-square&logo=github&logoColor=white\"></a>|\n|✏️ 박현우|KAIST 전산학부|<a href=\"https://github.com/siesdart\" target=\"_blank\"><img src=\"https://img.shields.io/badge/GitHub-181717?style=flat-square&logo=github&logoColor=white\"></a>|\n\n\n\n## 2. 개발 환경\n- Language: Dart\n- Frontend: Flutter\n    - State Management: Riverpod\n- IDE: Android Studio, Visual Studio Code\n\n\n\n## 3. 프로젝트 설명\n이 어플은 Tab 단위로 구성되어 있습니다.\n이동하고자 하는 Tab의 아이콘을 누르면, 해당 Tab으로 이동할 수 있습니다.\n![tab bar](https://github.com/siesdart/madcamp-week1/assets/91830035/4ef75adc-337f-47f7-abaa-8f75d1286802)\n\n\n### 📞 연락처\n**[overview]**\n![contact overview](https://github.com/siesdart/madcamp-week1/assets/91830035/bed17ec9-027b-4458-83bb-62ba60883297)\n\n**[flow]**\n<p align=\"center\">\n    <img src=\"https://github.com/siesdart/madcamp-week1/assets/91830035/b3a18445-2478-444b-a44a-669e123adc5d\" width=\"20%\"><span>Search Contact</span>\n    <img src=\"https://github.com/siesdart/madcamp-week1/assets/91830035/8fe53027-647b-43a6-bc3a-117bd4890894\" width=\"20%\"><span>Navigate to another app</span>\n</p>\n\n**[기능]**\n- 인터넷에서 가상의 샘플 json 데이터를 받아 ListView를 통해 화면에 연락처 목록을 보여줍니다.\n- 상단의 검색 창을 통해, 이름으로 연락처를 검색할 수 있습니다.\n- 목록 클릭 시, 연락처 상세 화면으로 이동합니다.\n    - 각 버튼 클릭 시, 전화번호와 이메일에 맞게 전화, 문자, 메일 앱을 자동으로 실행합니다.\n\n\n### 🖼️ 갤러리\n**[overview]**\n![gallery overview](https://github.com/siesdart/madcamp-week1/assets/91830035/2388c052-9bb5-47c1-81c2-0a2bba01aac3)\n\n**[flow]**\n<p align=\"center\">\n    <img src=\"https://github.com/siesdart/madcamp-week1/assets/91830035/a1c16ea6-b513-49c5-88fc-e090da1d79be\" width=\"15%\"><span>Scroll view</span>\n    <img src=\"https://github.com/siesdart/madcamp-week1/assets/91830035/c0a9cd97-eacc-47fc-834c-4f3ef6e0a1d7\" width=\"15%\"><span>Image detail</span>\n    <img src=\"https://github.com/siesdart/madcamp-week1/assets/91830035/d63a54f1-b16f-49d0-ad68-5807f169c57e\" width=\"15%\"><span>Press Like</span>\n    <img src=\"https://github.com/siesdart/madcamp-week1/assets/91830035/02e48d92-f529-4637-99e6-44af31cea4da\" width=\"15%\"><span>Press Unlike</span>\n</p>\n\n**[기능]**\n- Gallery 메인 화면에서는 모든 이미지와 'Liked'한 이미지를 구분하여 볼 수 있습니다.\n  - 각 section 안에서 scroll view를 제공합니다.\n- 이미지를 클릭하면 이미지 상세 화면을 볼 수 있습니다.\n  - 이미지 상세 화면은 이미지 이름, 원본 비율의 사진, ‘Like’ 버튼으로 구성되어 있습니다.\n  - ‘Like’ 버튼을 누르면, ‘Liked Image’ section에 곧바로 반영되는 것을 볼 수 있습니다.\n  - 이미 ‘Like’한 이미지의 상세 화면에는 'Like' 버튼 대신 ‘Unlike’ 버튼이 있습니다.\n      - 'Unlike' 버튼을 누르면, ‘Liked Image’ section에서 해당 이미지를 제거할 수 있습니다.\n\n\n### 🎮 게임\n**[overview]**\n![game overview](https://github.com/siesdart/madcamp-week1/assets/91830035/4fc5b6e6-14bc-4f88-88f5-df4758d6a726)\n\n**[flow]**\n<p align=\"center\">\n    <img src=\"https://github.com/siesdart/madcamp-week1/assets/91830035/e5699812-cf6b-4c6f-8259-75bc583fff45\" width=\"30%\"><span>Play game</span>\n</p>\n\n**[기능]**\n- 사칙 연산 게임을 play할 수 있습니다.\n  - 상단에 위치한 2개의 bar를 통해, 현재 레벨과 레벨 내 문제 번호를 볼 수 있습니다.\n  - ‘How to play’ 버튼을 눌러 게임 설명을 볼 수 있습니다.\n  - ‘Enter your answer…’ 라는 hint 메시지가 적힌 text box에 답을 입력할 수 있습니다.\n    - 이용자가 입력한 답에 대한 팝업 메시지는 다음과 같습니다.\n      ![game popup](https://github.com/siesdart/madcamp-week1/assets/91830035/ad8940ba-c435-4830-8c38-49592ff89cbd)\n  - 레벨 3까지 모두 완료하거나, ‘Exit’ 버튼을 눌러 게임 결과 화면으로 이동할 수 있습니다.\n    ![game result](https://github.com/siesdart/madcamp-week1/assets/91830035/b1f51d65-d230-49fc-b6be-047dbd85ed36)\n    - 결과 화면에서는 (맞힌 문제 / 전체 문제) 비율, (문제 번호, 문제, 정답 여부, 이용자 입력 답, 실제 답) bar를 볼 수 있습니다.\n    - 결과 화면에서 ‘Restart’ 버튼을 누르면, 게임을 다시 시작할 수 있습니다.\n\n\n\n## 4. apk 파일\nhttps://github.com/siesdart/madcamp-week1/raw/main/app-release.apk\n",
      "# 프로젝트 이름 \nDoggy On&On\n<br>\n\n# 프로젝트 설명\n**Doggy On & On**은 강아지 등록 시스템과 견주 커뮤니티를 기반으로 하여 유실견을 찾을 수 있는 앱입니다.\n\n**Doggy On & On에서는..**\n\n> 견주간의 활발한 소통을 기반으로 수준 높은 견주 커뮤니티를 형성합니다.\n> \n\n> 견주 커뮤니티 안에서 서로의 유실 강아지를 찾아주며 유실 강아지의 반환 비율을 늘립니다.\n> \n\n> 강아지 등록 시스템을 통해 견주의 책임감을 향상시켜 유실견 뿐만 아니라 유기견의 발생 비율을 줄입니다.\n<br>\n\n# 앱 제작 배경\n![Untitled](https://github.com/jooyoung9939/kjy_nsh/assets/155051230/3416af21-5951-4c5f-87df-50d4000850c2)\n- 2022 반려동물 보호 복지 실태조사에 의하면 2022년 연간 유기 및 유실 된 강아지 중 보호자에게 반환되는 비율은 16.8%에 그친다.\n- 유실된 강아지가 보호자의 품으로 돌아갈 수 있게 하고 싶다.\n- ⇒ 유실된 강아지를 찾는 과정을 보호센터에 온전히 맡기는게 아니라, **견주 커뮤니티를 형성하여 서로 도움을 주고 받을 수 있는 시스템을 형성하자.**\n- 또한, 반려동물을 시스템에 등록하고 책임감을 가지는 문화를 형성하여 유기견의 비율까지 줄일 수 있도록 한다.\n<br>\n\n# 앱 설명\nnotion: https://www.notion.so/madcamp/Doggy-On-On-45bb65e4a0eb42ae8a5c687056c6909f?pvs=4\n<br>\n\n# 앱 스크린샷\n<br>\n스플래시 화면\n<br>\n\n![스플래시](https://github.com/jooyoung9939/kjy_nsh/assets/155051230/c5a4b980-60b1-4355-94d2-630ac2852359)\n\n<br>\n탭3 기본화면\n<br>\n\n![탭3 기본 화면 (1)](https://github.com/jooyoung9939/kjy_nsh/assets/155051230/12861835-882d-4c80-b82d-86c4280dd6a8)\n\n<br>\n탭2 기본화면\n<br>\n\n![갤러리 기본 화면](https://github.com/jooyoung9939/kjy_nsh/assets/155051230/eacc23b0-6235-486e-b052-ead093bf8c69)\n\n<br>\n탭1 기본화면\n<br>\n\n![탭1 기본 화면](https://github.com/jooyoung9939/kjy_nsh/assets/155051230/80f55d45-3a69-40de-82ad-80c7b9744593)\n\n<br>\n      \n# 팀원\n* 김주영 <br>\n* 남승훈\n<br>\n\n# APK 파일\nhttps://drive.google.com/file/d/1YzbxK-Qg-Ad7wm2x24ZWiC0hWBXHguet/view?usp=drive_link\n",
      "# NAGA, 나가\n\n<img src=\"https://github.com/naco0406/tab3/assets/71596178/a353ec70-a146-41ba-abd9-039cab8b3857.png\" width=\"100%\" height=\"100%\"/>\n<img src=\"https://github.com/naco0406/tab3/assets/71596178/a19b120e-5a51-430e-8c0f-4b7be233e061\" width=\"100%\" height=\"100%\"/>\n<img src=\"https://github.com/naco0406/tab3/assets/71596178/f0c822c5-5d48-492a-8697-06fec4bc968a.png\" width=\"100%\" height=\"100%\"/>\n<img src=\"https://github.com/naco0406/tab3/assets/71596178/49c9a740-0b36-4817-9496-301b73a7e851.png\" width=\"100%\" height=\"100%\"/>\n<img src=\"https://github.com/naco0406/tab3/assets/71596178/56ee867a-6a38-4131-aa10-7f726cf2261a.png\" width=\"100%\" height=\"100%\"/>\n\n\n## 💻 프로젝트 소개\n\nAndroid Studio(Kotlin)를 사용하여 개발한 여행에서 만난 사람들의 연락처를 저장하고, 위치를 태그하는 어플리케이션\n\n## 개발환경\n\n- Language : Kotlin\n- OS : Android\n- IDE : Android Studio\n\n> minSdkVersion 21\n>\n> targetSdkVersion 32\n\n\n## APK 파일\n\n## 👫 팀원\n\n고영 - 카이스트 전산학부 21학번\n\n한채연 - 숙명여대 IT공학과 20학번\n\n## 📌 주요 기능\n\n### Tab1\n\n> 연락처 검색, 추가/수정/삭제 가능\n> \n\n<img src=\"https://github.com/naco0406/tab3/assets/71596178/56add349-6c37-46ed-b312-6c5c20964017.png\" width=\"30%\" height=\"30%\"/>\n<img src=\"https://github.com/naco0406/tab3/assets/71596178/1568cf4e-935d-4c1d-90ae-b155f649eb4f.png\" width=\"30%\" height=\"30%\"/>\n\n\n- 연락처 정보 보여주기\n- 사용자 이름, 전화번호로 검색\n- 이미지, 이름, 전화번호를 입력하여 새로운 프로필 생성\n- 기존 연락처 수정 및 삭제\n- 전화걸기, 메시지 보내기 기능\n\n---\n\n> 기술 설명\n\n- RecyclerView와 ProfileAdapter를 사용해 JSON 데이터 형태인 연락처 리스트 보여주기\n- 사용자 이미지 효율적으로 처리하기 위해 Glide 라이브러리 이용\n- 연락처는 `sortByName` 으로 정렬\n- SearchView에서 검색어 입력시마다 `onQueryTextChange` 가 호출되어 연락처, 사용자 이름으로 검색\n- JSON 데이터 파싱을 간단하게 하기 위해서 GSON 라이브러리 사용\n- JSON데이터가 변경될 때마다 `notifyDataSetChanged()`로 RecyclerView 갱신\n- Intent를 사용해 전화 다이얼과 문자 보내기로 이동\n\n### Tab2\n\n> 캘린더에서 선택한 날짜에 맞는 데이터와 이미지 보여주기\n\n<p align=\"center\">\n<img src=\"https://github.com/naco0406/tab3/assets/71596178/e6984da7-64e2-4d84-a3e5-cd92d1ff6207\" width=\"30%\" height=\"30%\">\n</p>\n\n<img src=\"https://github.com/naco0406/tab3/assets/71596178/55a52592-16db-4949-aad3-a65ad7dc982c.png\" width=\"30%\" height=\"30%\"/>\n<img src=\"https://github.com/naco0406/tab3/assets/71596178/07e03fa9-bd36-47af-b510-85f5ab92c70b.png\" width=\"30%\" height=\"30%\"/>\n\n\n\n- 사용자가 ButtomSheetBehavior를 올리고 내리는 정도에 따라 CardView의 이미지 조정\n- 캘린더에서 데이터가 있는 날짜에 빨간 점 표시\n- Custom Dialog로 원하는 년, 월 선택\n\n---\n\n> 기술 설명\n> \n- Material CalendarView를 사용하여 커스텀 캘린더 구현\n- ButtomSheetBehavior를 사용하여 하단에서 올라오는 창 구현\n- Number Picker를 사용하여 원하는 년, 월 선택\n\n### Tab3\n\n> 사진을 모아 보고, 추가할 수 있는 갤러리\n\n\n<img src=\"https://github.com/naco0406/tab3/assets/71596178/5f5f337a-bc6a-47be-b93b-dd6e5896c7cb.png\" width=\"30%\" height=\"30%\"/>\n<img src=\"https://github.com/naco0406/tab3/assets/71596178/1df8ffb3-2feb-43c1-a554-792089640d4c.png\" width=\"30%\" height=\"30%\"/>\n\n\n- 사진 추가 클릭시 카메라 앱으로 이동하고, 사진 찍기\n- 찍은 사진과 함께 사용자의 현재 위치와 현재 시간 자동 입력 및 연락처에 있는 사람 선택\n- GPS를 이용하여 도시와 국가를 자동 입력\n- 장소 필터링 기능\n- 좋아요 기능\n\n---\n\n> 기술 설명\n> \n- 이미지 크기를 정사각형으로 조절해 GridLayout으로 갤러리 사진 보여주기\n- 이미지 선택시 Modal창이 떠서 사진과 데이터를 띄워줌\n- 사진에 함께한 사람을 태그하는 Custom Item Selector 구현\n\n",
      "# 3M_Mad_Memoir_Mix\n*2023 Winter MadCamp First Project*\n\n\n\n## Outline\n<img src=\"https://github.com/najiyeon/3M_Mad_Memoir_Mix/assets/113894257/f79ea7fd-abf9-46e6-ad58-fe4bbaec736f\" width=\"200\"></img>  <img src=\"https://github.com/najiyeon/3M_Mad_Memoir_Mix/assets/113894257/24dcd24f-669b-4eca-9e6b-1285874f04de\" width=\"350\"></img>\n\n<br/>\n\n**3M: Mad Memoir Mix**는 3개의 **M**(**Member, Memory, Minigame**)으로 구성된 앱으로, 몰입캠프 구성원 간에 유대를 쌓고 추억을 기록하는 공간입니다.\n\n<br/>\n\n## Team\n**나지연**  <a href=\"https://github.com/najiyeon\" target=\"_blank\"><img src=\"https://img.shields.io/badge/GitHub-181717?style=flat-square&logo=github&logoColor=white\"></a>\n\n**하준학** <a href=\"https://github.com/jannagi\" target=\"_blank\"><img src=\"https://img.shields.io/badge/GitHub-181717?style=flat-square&logo=github&logoColor=white\"></a>\n\n<br/>\n\n## Tech Stack\n**Front-end** : Kotlin\n\n**IDE** : Android Studio\n\n<br/>\n\n## About\n**Member**\n- 연락처 목록: 나의 몰입메이트들의 연락처를 확인할 수 있습니다.\n- 연락처 검색: 이름으로 연락처를 검색할 수 있습니다.\n- 연락처 상세정보: 연락처를 클릭하면 연락처 정보를 자세하게 볼 수 있습니다.\n- 전화/메시지 연결: 휴대폰 기본 전화/메시지 앱으로 연결되어 간편하게 전화를 걸거나 메시지를 보낼 수 있습니다.\n\n**Memory**\n- 사진 view: 남는 것은 사진뿐! 몰캠에서의 추억들을 갤러리로 확인할 수 있습니다.\n- 사진 상세정보: 사진을 클릭하면 사진의 이름, 날짜, 사진 사이즈, 파일 크기를 확인할 수 있습니다.\n- 사진 비율 전환: 원본비율과 정방형 비율로 볼 수 있게 변환해주는 버튼이 있습니다.\n\n**Minigame**\n- 동전 던지기: 동전을 던지면 앞면과 뒷면이 랜덤하게 나옵니다.\n    - (추가기능) 이순신 게임: 한번쯤 그런 날이 있죠… 내일이 없는 사람처럼 마시고 싶은 밤🌙.. 내일이면 기억과 간을 모두 잃을 수 있는 게임이 있습니다. 오늘 밤 술자리는 이순신 게임으로 장을 비워내고 추억을 채워 넣어보세요! 🎉\n- 주사위 굴리기: 두개의 주사위를 던져 각 주사위 면들이 랜덤하게 나옵니다.\n    - (추가기능) 주사위 게임: 다들 어릴적 주사위를 가지고 놀았던 추억 하나쯤은 있죠.👶🏻 오늘은 그 추억 속으로 돌아가 주사위 게임 한 판 어떠신가요? 술도 마시면서 순수함까지 챙기는 주사위 게임👻 정말 재미있을 것 같지 않나요!?\n \n<br/>\n\n## Preview\n**Intro: Splash**\n\n<img src=\"https://github.com/najiyeon/3M_Mad_Memoir_Mix/assets/113894257/b222d28f-256d-464e-9266-05049fd8baad\" width=\"250\"></img> &emsp; <img src=\"https://github.com/najiyeon/3M_Mad_Memoir_Mix/assets/113894257/36dcdf26-59b6-4552-85fd-d481604b5b03\" width=\"250\"></img>\n\n<br/>\n\n**Member**\n\n<img src=\"https://github.com/najiyeon/3M_Mad_Memoir_Mix/assets/113894257/a6a98c84-7f9a-4c82-a9f2-dabbea77025d\" width=\"250\"></img> &emsp; <img src=\"https://github.com/najiyeon/3M_Mad_Memoir_Mix/assets/113894257/c0c450f0-1080-4f7e-8282-52ef94bd141c\" width=\"250\"></img>\n\n<br/>\n\n**Memory**\n\n<img src=\"https://github.com/najiyeon/3M_Mad_Memoir_Mix/assets/113894257/666b0858-5748-4d1c-86e5-97358c17f825\" width=\"250\"></img> &emsp; <img src=\"https://github.com/najiyeon/3M_Mad_Memoir_Mix/assets/113894257/7f67faca-4b03-4dcc-8300-354d9141f264\" width=\"250\"></img>\n\n<br/>\n\n**Minigame**\n\n<img src=\"https://github.com/najiyeon/3M_Mad_Memoir_Mix/assets/113894257/9a85b317-9e6e-4f51-8ade-164d211d3641\" width=\"250\"></img>\n\nhttps://github.com/najiyeon/3M_Mad_Memoir_Mix/assets/113894257/8c6d6142-07c0-4367-9eb9-b4b7b030c7a3\n\nhttps://github.com/najiyeon/3M_Mad_Memoir_Mix/assets/113894257/f6c62bd2-df7a-4aad-81b3-a9025599334b\n\n<br/>\n\n## Beta\n**apk link**\n\nhttps://drive.google.com/file/d/1VQluddBxFkkSFkzc6wl1XXZtUNBA70rh/view?usp=sharing\n\n",
      "# MadTicket\n\"몰입캠프 영화상영회\" 예매하고 리뷰 작성까지!\n\n## Outline\nMadTicket은 몰입캠프 영화 상영회에서 보일 20개의 영화를 함께 보고 싶은 2분반 구성원과 예매를 하고 후기도 작성할 수 있는 앱입니다.\n\n세 개의 탭은 각각 Members, Movie Gallery, Review로 구성되어 있습니다.\n\n**개발환경**\n- Android Studio (Java)\n- Adobe Illustrator, Adobe Photoshop  \n\n<br>\n\n## Team\n박강태(카이스트 전자 19), 정지연(성균관대 소프트웨어 21)\n\n<br>\n\n## Details\n\n### Intro & TabLayout\n\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/51894747/8b251be1-dee4-44d3-9a25-ffe6204b580b.jpg\" width = 20% height = 20%>\n\n앱을 처음 실행했을 때 2초간 나타나는 로딩화면을 splash로 구현\n\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/51894747/fb8eb347-4b31-49aa-84b1-0346b4d8f0ac.jpg\" width = 50% height = 50%>\n\n\n\nTabLayout을 적용해 TabPagerAdapter를 이용해 각 Fragment를 볼 수 있도록 구현\n\n\n\n<br>\n\n\n\n### Tab 1: Members\n구성원의 프로필을 보고 영화를 예매할 수 있는 탭\n\n### 프로필\n\n- 영화 상영회에 참여할 수 있는 2분반 구성원들의 자기소개 프로필을 보여주는 탭이다. 자기소개 프로필에는 이름 뿐만 아니라 생년월일, MBTI, 연락처, 프로필 사진이 존재한다.  해당 데이터들은 JSON 데이터 형식을 이용하여 RecyclerView로 보여주었다.\n\n\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/546981b2-e59f-447d-92f3-a4b68ba39aa6.jpg\" width = 20% height = 20% > *Tab1의 구성원 프로필*\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/d7be5b1e-9ac8-48e5-9689-779c6a36a0e4\" width = 20% height = 20% >\n<ima src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/3a8c8f91-3f4c-448e-8fc6-d74183615a01\" width = 20% height = 20% >\n\n  \n  <br>\n- 구성원의 프로필을 CardView로 만들었기 때문에 상영회에 참여하고 싶은 구성원들은 예매하기 버튼을 눌러서 각자 영화를 예매할 수 있다.\n- 맨 상단에는 SearchView를 추가하여 검색하고 싶은 이름, 생년월일, MBTI, 연락처 중 원하는 텍스트를 입력하고 Submit하면 해당 데이터의 위치로 스크롤이 이동한다. 또한 SearchView의 X 버튼을 누르게 된다면 Tab 1의 최상단으로 이동한다.\n\n\n<br>\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/546981b2-e59f-447d-92f3-a4b68ba39aa6\" width = 20% height = 20% >\n  <img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/3a8c8f91-3f4c-448e-8fc6-d74183615a01\" width = 20% height = 20% >\n \n\n### 예매하기\n\n\n- 상영회에 참여하고 싶은 2분반 구성원은 본인의 프로필을 검색한 후, 예매하기 버튼을 누를 수 있다.\n- 예매창이 뜨기 전까지 로딩 아이콘이 실행된다.\n- 예매창에는 영화에 대한 포스터 사진들이 2행에 걸쳐 Horizontal ScrollView로써 나타난다. 또한 포스터 밑으로 영화에 대한 기본적인 정보들이 제공된다. 영화의 이름 및 관람 연령, 장르, 개봉날짜가 표시된다.\n- 각 영화 별로 개별 상영관과 상영 시간표들이 존재하고, 각 시간에 따라 이용할 수 있는 좌석과 전체 좌석을 볼 수 있다. 해당 좌석의 수는 데이터베이스와 연결하여 관리하였다. (SQLite)\n- 데이터베이스에는 Seat 테이블이 존재하고 테이블에는 id, time_id, seat_id가 존재하며 id가 primary keyd이다. time_id별로 seat_id를 count 하여 상영 시간에 따른 이용 좌석의 갯수를 관리하였다.\n<br>\n\n\n <img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/82f1b94f-fc9a-424c-958d-e9b4ad60847e\" width = 20% height = 20% >\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/42b20a25-bb4b-4992-b268-b19b273fa201\" width = 20% height = 20% >\n<br>\n\n- 원하는 영화와 상영관, 상영 시간을 고른 후 TimeCard를 누르게 되면 TimeCard의 배경 색상이 바뀌게 되며 선택되었음을 알 수 있게 표시해주었다. 그런 후에 예매 확정을 누르게 되면 예매에 성공하였다는 알림창이 뜨게 되고, 모바일 티켓이 발행된다.\n- 또한 데이터베이스에 존재하는 해당 영화와 시간의 이용할 수 있는 좌석 갯수가 1씩 감소하게 된다. 예매를 확정한 후 예매창을 다시 들어갔을 때, 이용좌석의 갯수가 줄어든 것을 확인할 수 있다.\n\n  \n<br>\n\n\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/e025c839-ca6d-4df4-ad36-aee616747beb\" width = 20% height = 20% >\n <img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/9cd674bd-7e8e-4a6c-822b-a024c247edca\" width = 20% height = 20% >\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/1dceb910-2b20-440d-9578-7e24f8a25c4b\" width = 20% height = 20% >\n\n\n<br>\n\n\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/6f663e4c-7983-47d3-ba06-cb49b8ba4cd8\" width = 20% height = 20% >\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/ae456975-9c99-4e88-aee3-7e00ad85032c\" width = 20% height = 20% >\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/c3a346fa-69a8-4ea0-8e5e-2d023c258253\" width = 20% height = 20% >\n\n\n\n- 또한 팝업창 최상단에 위치해있는 X 버튼을 누르면 예매창을 닫을 수 있다.\n- 우측 하단에 존재하는 Scroll Down 버튼을 누르면 스크롤이 어디에 있든 창의 최하단으로 자동 스크롤이 되어 예매 확정 버튼을 편리하게 누를 수 있다.\n\n- 또한 팝업창 최상단에 위치해있는 X 버튼을 누르면 예매창을 닫을 수 있다.\n- 우측 하단에 존재하는 `ScrollDown` 버튼을 누르면 스크롤이 어디에 있든 창의 최하단으로 자동 스크롤이 되어 예매 확정 버튼을 편리하게 누를 수 있다.\n\n\n<br>\n\n\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/e025c839-ca6d-4df4-ad36-aee616747beb\" width = 20% height = 20% >\n <img src = \"https://github.com/ParkGangtae/madweek1/assets/127393132/9cd674bd-7e8e-4a6c-822b-a024c247edca\" width = 20% height = 20% >\n\n\n<br>\n\n### Tab 2: Movie Gallery\n상영작 20개의 포스터와 예고편을 볼 수 있는 탭\n\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/51894747/c10569bd-f9d9-4b25-8c5a-541f897aeef0.jpg\" width = 20% height = 20%>  \n\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/51894747/445774f6-80ec-4489-a651-70e3f53ec944.jpg\" width = 20% height = 20%>\n\nLinearLayout (horizontal)에 GridView 2개를 배치해 두 열이 각각 따로 움직일 수 있게 레이아웃 제작\n\n포스터는 3:4 비율로 수정 한 후 앱 컨셉에 맞게 Photoshop을 이용해 편집 과정을 거침\n\n- drawable 폴더에 저장\n\n포스터를 터치하면 DialogView가 나타나 유튜브 영화 예고편이 실행됨\n\n<br>\n\n### Tab 3: Review\n영화 리뷰를 작성하고 평균 별점 랭킹을 볼 수 있는 탭\n\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/51894747/df2a37de-cb24-4961-bb33-2f0aab3b7708.jpg\" width = 20% height = 20%>  \n\n<img src = \"https://github.com/ParkGangtae/madweek1/assets/51894747/f849a826-ca16-4f4a-bac5-cb4220f528a2.jpg\" width = 20% height = 20%>\n\nRecyclerView를 이용해서 가로 넘겨볼 수 있는 리뷰 모음집과 영화 랭킹을 표시함\n\n- 영화 랭킹은 각 영화에 대한 평균 별점을 소숫점 첫째 자리까지 반올림한 순서대로 나타나고 아직 리뷰가 없는 영화는 표시되지 않음\n\nFloatingActionButton을 이용해서 리뷰를 추가하는 페이지로 넘어가는 버튼 제작\n\n- <리뷰를 작성할 영화를 선택하세요>를 터치하면 RadioButton Dialog가 나타나서 영화를 선택할 수 있고, 텍스트가 해당 영화 제목으로 바뀜\n- 리뷰를 작성하지 않으면 <작성> 버튼을 눌러도 반영되지 않음\n\nSQLite Database를 이용해서 해당 영화, 리뷰 내용, 별점, 그리고 각 영화에 대한 평균 별점을 저장함\n\n- 리뷰를 저장하는 Table과 각 영화에 대한 평균 별점이 저장되어 있는 Table 두 개로 나뉨\n\nSwipeRefreshLayout을 적용해 화면을 아래로 당겼을 때 새로고침 하여 최신 리뷰를 반영하도록 함\\\n\n\n\n\n\napk 파일 링크\nhttps://drive.google.com/file/d/1rC8PnB4uX9irNeDHgLgKrDOQqoZxuM9E/view?usp=sharing\n",
      "# MadDiary",
      "# ComManager\n\n<aside>\n💡 회사 생활의 편의를 높여주는 관리앱!\n\n</aside>\n\n- 회사 구성원들의 정보를 부서별로 관리해줍니다.\n- 부서별 Todo list를 통해 해야할 일, 완료된 일을 관리해줍니다.\n- 공유 갤러리를 통해서 회사 내 행사 포스터, 함께 놀러간 사진 등의 공유가 가능합니다.\n\n---\n\n# 개발 팀원\n\n- 김융 - KAIST 22학번\n- 양혜민 - DGIST 20학번\n\n진행과정 \n\n\n# 개발 환경\n\n- Language : JAVA\n- Database : Room\n- OS : Android\n- IDE : Android Studio\n\n---\n\n# 어플리케이션 소개\n\n## 어플리케이션 구조\n\nAndroid Room DB를 이용하여 다음과 같은 스키마를 설계하였습니다.\n\n- Department : 부서 ID(primary), 부서 이름\n- Person : ID(primary), 이미지 URI, 사람 이름, 소속 부서, 전화번호\n- Image : ID(primary), 이미지 URI, 이미지 이름, 소속 부서(null 허용)\n- TodoItem : todoID(primary), task, 소속 부서\n\n---\n\n## 0. Main 화면\n\n### Major features\n\n- 앱 시작 시 휴대폰 외부 저장소에 대한 접근 권한을 묻는 창이 표시됩니다.\n- 각각의 Tab으로 연결되는 버튼이 세 개 배치되어 있습니다.\n- 홈 버튼을 통해 어느 페이지에서든 main 화면으로 돌아오고, 아이콘 이미지를 클릭하면 뒤로 갈 수 있습니다.\n\n![KakaoTalk_20240103_203106309](https://github.com/systil3/week1_final/assets/70615100/c74f6638-845e-46bd-afbf-9d4dedd0c03d)\n\n\n## 1. Tab1 - 회사 구성원 데이터베이스 가져오기\n\n### Major features\n\n- 회사 구성원들의 연락처, 이름, 부서 등의 정보가 담긴 데이터를 확인할 수 있습니다.\n- 전화 걸기 및 메세지 보내기가 가능합니다.\n- 구성원 검색 기능과 부서별 구성원 확인이 가능합니다.\n\n![KakaoTalk_![KakaoTalk_20240103_203106309_02](https://github.com/systil3/week1_final/assets/70615100/58418eb4-b677-4018-8573-ca4293dd340c)\n20240103_203106309_01](https://github.com/systil3/week1_final/assets/70615100/55387979-385b-4b4e-bcb1-9096dfa99aea)\n\n![Uploading KakaoTalk_20240103_203106309_02.png…]()\n\n\n### 상세 구현 설명\n\n- 내장된 데이터베이스에 액세스하여 모든 Person 개체들을 가져옵니다. 만약 데이터베이스가 비어 있다면, 애셋 폴더에 위치한 JSON 파일을 읽어들여 데이터베이스에 추가합니다.\n- 가져온 Person 개체들을 RecyclerView를 이용하여 부서명과 함께 전부 표시합니다. 이 때 부서 [ ID → 이름 ] 순서대로 개체들을 정렬해 줍니다.\n- 오른쪽에 전화와 문자 아이콘을 추가하여 휴대폰의 전화 / 문자 앱과 연동할 수 있도록 합니다.\n- 사람의 이름을 클릭하면 이름과 함께 그 사람의 이미지, 그 사람이 속한 부서, 전화번호가 recyclerview를 통해 표시되도록 합니다.\n- 상단의 검색 창을 통해 사람 이름을 검색할 수 있습니다. department 스피너를 추가하여 각 부서별로 부서에 속한 사람만 표시하는 기능도 추가하였습니다.\n\n### 향후 구현 계획\n\n- JSON에서 읽어오는 것뿐만이 아닌 사용자가 직접 데이터를 추가하여 DB에 넣는 기능을 추가할 계획입니다.\n\n## 2. Tab2 - 공동 갤러리\n\n### Major features\n\n- 휴대폰 외부 저장소에서 이미지를 가져와 등록할 수 있습니다.\n- 등록된 이미지를 클릭할 경우 확대된 모습을 확인할 수 있습니다.\n\n![KakaoTalk_20240103_203106309_04](https://github.com/systil3/week1_final/assets/70615100/1d158732-19bc-43a0-859d-d2f9a5c910fc)\n![KakaoTalk_20240103_203106309_05](https://github.com/systil3/week1_final/assets/70615100/6048f1ce-e571-4d0b-b540-c74dc7b75b8b)\n\n\n### 상세 구현 설명\n\n\n- 휴대폰 외부 저장소와 연동하여 이미지를 가져와 GridView에 추가하는 방식으로 갤러리를 구현하였습니다.\n- 이미지를 추가할 경우 URI 형식으로 데이터베이스에 저장되며 기본적으로 파일 이름과 동일한 이름을 개체 이름으로 갖습니다.\n- 이미지를 클릭하면 해당 이미지로 구성된 fragment로 교체하여 해당 이미지의 확대된 모습을 볼 수 있습니다.\n\n### 향후 구현 계획\n\n- 이미지 클릭 후 삭제 및 태그로 관련된 부서를 추가할 수 있는 기능도 구현하고자 합니다.\n\n## 3. Tab3 - Todo List\n\n### Major features\n\n- 처음 들어가면 부서별 Todo list를 선택할 수 있고, 해당 페이지로 들어가면 부서별 todo list를 작성할 수 있습니다.\n- 사용자가 todo list를 추가, 수정, 삭제할 수 있습니다.\n- 체크 버튼을 통해 완료된 todo list를 표시할 수 있습니다.\n\n![KakaoTalk_20240103_203106309_07](https://github.com/systil3/week1_final/assets/70615100/7ff5f1cd-b3b7-49e0-adbd-8f421f61162e)\n![KakaoTalk_20240103_203106309_12](https://github.com/systil3/week1_final/assets/70615100/e46dbd7e-2338-492e-ac3b-2c8c48715575)\n\n### 상세 구현 설명\n\n- 각 부서별 페이지로 들어간 후, 데이터베이스에 저장된 부서별 Todo 리스트를 읽어와 표시합니다.\n- ADD 버튼으로 새로운 Todo 리스트를 추가할 수도 있습니다. 작성한 Todo 리스트의 경우 일단 뒤로 가기 버튼을 누르면 변동 사항이 모두 저장되어 DB에 입력됩니다.\n- 체크박스의 경우 각 Todo 리스트가 완료되었음을 표시하기 위해 UI에 들어가 있긴 하나, 제대로 작동하는 기능을 구현하지 못하였습니다.\n\n### 향후 구현 계획\n\n- 현재 발생하는 오류를 수정할 예정입니다.\n    - 현재 뒤로 가기 버튼을 누르고 다시 들어갔을 때 Todo 리스트가 사라지는 오류\n    - ADD 버튼을 누를 시 아무런 반응이 없다가 Todo 리스트가 2개 이상 생기는 오류\n    - 갑자기 앱이 강제 종료되는 오류\n \n### 산출물\nhttps://drive.google.com/drive/folders/1O8HRh9kL_EIIhJhswAaIo8lTOYzJyu4-?usp=sharing\n",
      "# madcamp-proj1\n\n\n## Features\n\n- 👀Create the three different Functioning Tabs.👀\n- 📞 List View of Stored Contacts\n- 📸 List View of Pics offered by Spotify (Thanks Spotify👍)\n- 🔍 OCR camera && TTS Recognizer\n\n## Development Environment\n### Framework\n\n> **React-Native-cli**\n\nWhy we choose to use? : \n- Have previous experience using it\n- High Versatility & Various Modules \n\n### IDE\n> **Android Studio**\n\n### API\n> Spotify Developer Api\n\n###  \n\n## App Introduction\n- Project Name: \n- Project Duration: **2023.12.29 - 2023.01.03**\n- Members:  **Hyuna, Kim** / **Seongmin, Lee**\n\n## Member Introduction & Role\n- **Hyuna, Kim** : (KAIST CS 22) \n\t- WireFrame Design (feat. Figma)\n\t- Design Overall Structure, & Implemented **Tab1, Tab3**\n- **Seongmin, Lee** : (KOREA CS 20)\n\t- MileStone managing (feat. Notion)\n\t- Implemented **Tab2**\n\n## Description\n### Tab 0. Splash View & BottomTabBar\n- Splash Vie: Show Logo Image before App Activated\n- BottomTabBar; StackNavigator, Move between Tab to Tab\n\n### Tab 1. Contacts\n- Interoperate with native App\n- CRUD available: Can store and edit the contacts\n- Share Function: Can share the contacts by native sharing function\n\n***Abbreviated Structure Description***\n|                |Contacts                         |\n|----------------|-------------------------------|\n|**Contacts**|**Contacts List;** RecyclerView()|\n|**Contacts Detail**|Detail Info: {*phonenumber, email*}, Covenient Function(*edit, share,* ...) |\n|**Contacts Edit**|Touchable Image, Description|\n\n### Tab 2. Gallery feat. spotify\n- Get the data from Spotify API\n- Search available for Three Categories: Album, Artists, and Tracks\n- Offer the FlatList View of Results\n\n|                |Gallery                         |\n|----------------|-------------------------------|\n|**Search (Input)**|Search by Caetegory (Album, Artitists, Tracks)|\n|**SearchBar (null)**|New Releases album|\n|**Detail**|Touchable Image, Description|\n\n\n### Tab 3.  MadVision\n- Recognize the characters in the image through the camera in real time : using react-native-vision-camera module\n- Text To Speech\n\n|                |MadVision                        |\n|----------------|-------------------------------|\n|**Camera Screen**|Display the camera screen|\n|**OCR**|Recognize the Text, Eng-Kor Translation|\n|**TTS**|Recognize the speech|\n|**OverLay**|Displayed the Recognized Infos|\n\n\n\n## Demonstration\n![1_1 Splash View](https://github.com/kimh2023/madcamp-proj1/assets/80628737/30b8636b-eecf-41a3-8f98-b6898c079def)\n\n\n\n## Improvements\n- Implement ScreenShot function of recognized Texts (Tab 3)\n- Implement AutoComplete Search, Preferences Button and Screen of Collected Preferences (Tab2)\n\n\n\n## References\n- https://developer.spotify.com/documentation/web-api\n- https://github.com/mrousavy/react-native-vision-camera\n"
    ]
  },
  "week2": {
    "class2": [
      "# MATE---from-madcamp-week-2\nfrom KAIST madcamp week 2\n\n![thumbnail](https://github.com/systil3/MATE---from-madcamp-week-2/assets/87977576/55aa68c6-5cda-49b9-baeb-84dce43688f6)\n\n\n## 앱 소개\n\n> *약속 시간이 언젠데… 왜 아직 안오는 거야?*\n> \n\n친구들끼리 만나기로 한 시간에 서로가 어디인지, 오고는 있는지 확인할 수 있는 앱입니다.\n\n**MATE: Meetup and Tracking Explorer**\n\n1. **Meetup (만남):** 이 부분은 친한 사람들과의 모임을 강조합니다. 어플리케이션을 통해 사용자들은 쉽게 서로의 위치를 확인하고 실제로 만날 수 있습니다.\n2. **And (그리고):** 여러 기능을 통합하여, 위치 정보 공유뿐만 아니라 다양한 다른 활동을 함께할 수 있는 플랫폼입니다.\n3. **Tracking (추적):** 앱은 사용자들 간에 위치 정보를 주고받을 수 있는 추적 기능을 제공합니다. 이는 친구들이 어디에 있는지 실시간으로 확인할 수 있도록 합니다.\n4. **Explorer (탐험가):** MATE는 새로운 장소를 탐험하고 새로운 사람들을 만날 수 있는 플랫폼임을 강조합니다. 함께하는 그룹과 함께 도시를 탐험하거나 새로운 장소에서 모임을 가질 수 있습니다.\n- 친구들끼리 그룹을 만들고, 그룹 단위의 구성원들 위치를 확인할 수 있습니다.\n- 그룹 단위로 약속을 만들 수 있습니다 → 모든 그룹 구성원들에게 적용\n\n**사용한 도구** 🔨\n\n- Android Studio, Kotlin\n- Python, Fastapi\n- MYSQL + sqlalchemy\n- Figma (UI 디자인)\n\n## 탭, 기능 소개\n\n### 로그인 화면\n\n![Untitled (2)](https://github.com/systil3/MATE---from-madcamp-week-2/assets/87977576/b0ba1910-55ca-49cd-9e92-933f326a0a2b)\n\n\n- 자체 로그인을 먼저 구현했습니다\n    - 자체 데이터베이스에 아이디, 비밀번호를 등록할 수 있습니다\n\n- SNS 로그인을 자체 로그인 로직에 연동시켰습니다.\n    - SNS 계정 정보를 이용해 회원으로 등록되어 있다면 로그인을 시켜주고, 아니라면 자체 회원가입으로 이동합니다.\n\n### 회원가입\n\n![Untitled (3)](https://github.com/systil3/MATE---from-madcamp-week-2/assets/87977576/a07cda82-1784-4876-a61c-3ffef53c4d26)\n\n\n- 회원 가입 탭에서는, 중복확인을 통해 아이디가 중복되지 않음을 인증해야만 회원 가입이 가능합니다\n\n- 회원 가입을 진행하면, 서버 측 데이터베이스에 아이디, 비밀번호, 닉네임, 이메일 정보가 저장됩니다\n\n- SNS 로그인을 진행하는 경우, 아이디와 비밀번호는 임의의 값으로 설정되며, 사용자가 변경할 수 없습니다\n\n### 홈 화면 : 그룹 정보와 약속 정보 표현\n\n![Untitled (4)](https://github.com/systil3/MATE---from-madcamp-week-2/assets/87977576/49548729-26b6-481c-b289-8c3d423b8818)\n\n\n- 홈 화면은 자신이 속한 그룹과 그룹의 약속을 보여줍니다\n\n- 새로운 그룹을 생성하거나, 기존 그룹에 참여할 수 있습니다\n    - 그룹 생성은 자신이 그룹장이 되며, 아무도 속하지 않은 새로운 그룹을 만듭니다\n    - 그룹 참가는 그룹원으로 기존 그룹에 참여하게 됩니다\n\n- 하단의 ‘**그룹 위치 확인 >**’ 버튼을 통해 지도 탭으로 이동할 수 있고, 지도 탭에서 그룹원들의 위치를 볼 수 있습니다\n\n### 그룹 상세 정보\n\n![Untitled (7)](https://github.com/systil3/MATE---from-madcamp-week-2/assets/87977576/1b9f3102-658f-4326-94fd-5bea91fba19e)\n\n- 그룹의 상세 정보를 볼 수 있는 탭입니다\n\n- 그룹 ID를 복사해 다른 사람들에게 전달하면, 해당 그룹 ID를 이용해 그룹에 참가할 수 있습니다\n\n- **비밀번호 보기**를 터치하면 그룹의 비밀번호가 짧은 시간 동안 토스트메세지로 나타납니다\n    - 해당 비밀번호와 그룹 태그를 이용해 그룹에 참가 가능\n\n- 그룹의 구성 인원이 몇 명인지, 각각 누구인지 확인할 수 있습니다\n\n- 그룹원/그룹장은 언제든 그룹을 탈퇴할 수 있습니다\n    - 그룹원은 그룹의 존재에는 영향을 미치지 못하고, 탈퇴만 가능합니다\n    - 그룹장은 그룹 삭제만 가능하며 그룹 삭제 시 모든 그룹원들에게 그룹이 삭제됩니다\n\n### 지도 : 위치 추적\n\n![Untitled (8)](https://github.com/systil3/MATE---from-madcamp-week-2/assets/87977576/68b2df17-a608-4803-96af-0b43e54eb4a5)\n\n- 지도 탭에서는 그룹원들의 위치 추적이 가능합니다\n    - 지도 탭에 들어오면, 서버와 소켓 스트림을 연결하게 됩니다\n    - 연결된 소켓 스트림으로 자신의 위치를 지속적으로 전달함과 동시에, 그룹원들의 위치를 전송받아 지도에 보여줍니다\n    - 본인은 빨간색 핀으로, 그룹원들은 파란색 핀으로 보여집니다\n\n- 서버로 GPS 위치 정보를 전송하는 프로세스는 **앱이 꺼져도 계속해서 실행됩니다**\n    - 앱을 실행 중이 아니라면, work manager를 이용해 15분 간격으로 자신의 위치를 서버로 전송하게 됩니다\n    - 해당 위치 정보를 서버에 저장하고, 누군가 지도 탭으로 이동해서 요청할 시 전달해줍니다\n    - 사용자가 GPS 기능을 끄거나, 백그라운드 동작 허용을 하지 않은 경우 서버로 GPS 정보를 보낼 수 없고 이 경우 서버는 사용자에게 위치 정보를 보내줄 수 없습니다\n\n![Untitled (9)](https://github.com/systil3/MATE---from-madcamp-week-2/assets/87977576/d929454e-1196-4519-afb6-9645d2bcb3cd)\n\n- 다른 그룹원을 터치하면, 해당 그룹원의 위치로 지도가 이동합니다\n    - 자신의 위치로부터 얼마나 멀리 떨어져 있는지 계산해서 보여줄 수 있습니다\n    - 한양대학교에 있는 오소리다섯의 경우… 134.6km만큼 떨어져 있습니다\n\n- 여러 그룹에 속해 있는 경우, 다른 그룹으로 전환할 수 있습니다\n    - 사진 상 나타나는 ‘김동하그룹’(자신의 그룹 이름)을 터치하면, 자신이 속해있는 그룹들을 드롭다운 형태로 볼 수 있습니다\n    - 전환하고 싶은 그룹을 선택하면, 지도에 있는 마커들을 모두 지우고 해당 그룹원들의 위치를 다시 그려줍니다\n",
      "### 개발환경\n\n- Kotlin, node.js, mySQL\n\n# WashHub\n\n카이스트 기숙사 학생들을 위한 세탁기 관리 어플리케이션\n\n---\n\n![Main](https://github.com/cypsyco/MadFacility/assets/137145628/214fe22c-b3ed-4cd1-9e77-c7a1ee683ae9)\n\n\n> 오늘 꼭 돌려야 할 빨래가 있지만, 공용 세탁기 자리가 없었던 경험 있으신가요? WashHub는 기숙사에서 지내는 학생들이 실시간으로 세탁기 사용 현황을 확인하고, 예약할 수 있도록 하는 서비스입니다.\n> \n\n---\n\n## TEAM\n\n- 전윤혁\n\n[cypsyco - Overview](https://github.com/cypsyco)\n\n- 송지효\n\n[estherjsong - Overview](https://github.com/estherjsong)\n\n---\n\n## PROJECT DESCRIPTION\n\n1. **SPLASH ACTIVITY**\n    \n    > **어플리케이션 로딩 애니메이션**\n    > \n    \n    \n    ![splash](https://github.com/cypsyco/MadFacility/assets/137145628/33f9357b-d7dc-419e-b6dd-64b545c165c0)\n\n    <Splash 동영상>\n    \n    어플리케이션을 처음 실행할 경우, 위와 같이 로딩 화면이 생성됩니다.\n    \n    Splash 애니메이션은 After Effect를 통해 구현되었습니다.\n    \n    ---\n    \n2. **로그인 & 회원 가입** \n    \n    > **Server와 DB 기반 로그인, 회원 가입 기능**\n    > \n    \n    \n    ![KakaoTalk_20240110_202223304](https://github.com/cypsyco/MadFacility/assets/137145628/f69bc0f9-811c-400d-8be4-0b0c09263e50)\n\n    <로그인 화면>\n    \n    Node.js Server와 MySQL DB를 기반으로 회원 정보를 저장하고, 불러오는 부분입니다.\n    \n    \n    ![KakaoTalk_20240110_202223304_08](https://github.com/cypsyco/MadFacility/assets/137145628/7f866cfb-6d57-47c1-9731-924143b927b3)\n\n    <회원 가입 화면>\n    \n    **회원 가입 기본 기능**\n    \n    - 프로필 사진을 클릭하면, 갤러리에서 프로필 사진 선택 가능\n    - 모든 필드를 입력해야 회원 가입 가능\n    \n    **회원 가입 추가 기능**\n    \n    - ID 중복 확인 (모든 필드를 입력하고, 중복 확인도 성공해야 가입 가능)\n    - Password 노출/가리기\n    - 성별에 따라 선택할 수 있는 기숙사를 다르게 설정\n    \n    ---\n    \n\n1. **세탁기 & 건조기 선택 화면**\n    \n    > **(성별에 따라) 세탁기를 이용할 기숙사 선택 가능**\n    > \n    \n    \n    ![KakaoTalk_20240110_202223304_06](https://github.com/cypsyco/MadFacility/assets/137145628/40c99e2f-d7a9-4a65-8494-b06b9fb4e73d)\n\n    <세탁기 & 건조기 선택 화면>\n    \n    로그인이 성공하면, 세탁기와 건조기를 선택할 수 있는 화면으로 이동하게 됩니다.\n    \n    상단 메뉴를 확인하면, 좌측에는 프로필 보기 버튼, 우측에는 기숙사 옵션 메뉴 버튼을 확인할 수 있습니다.\n    \n    세탁기와 건조기 버튼은 현재 기숙사에서 이용 가능한 개수를 표시해주고 있습니다.\n    \n    기숙사 선택 화면은 기본적으로 사용자의 기숙사로 설정되어 있는데, 옵션 메뉴를 클릭하여 다른 기숙사의 현황도 볼 수 있습니다. 이 경우, 사용자의 성별에 따라 같은 성별의 기숙사만 선택할 수 있도록 메뉴를 구성하였습니다.\n    \n    ---\n    \n\n1. **세탁기 선택 화면**\n    \n    > **사용 가능, 사용 중, 예약 중, 수리 중 현황 공유**\n    > \n    \n    \n    ![KakaoTalk_20240110_202223304_09](https://github.com/cypsyco/MadFacility/assets/137145628/518f437a-1386-4498-a1d2-3673cbd92ca1)\n\n    <세탁기 선택 화면>\n    \n    세탁기 선택 화면에서는 현재 세탁기의 현황을 확인한 후, 세탁기를 사용, 혹은 예약할 수 있습니다.\n    \n    **세탁기 상태**\n    \n    - **사용 가능:** 즉시 사용이 가능합니다.\n    - **사용 중:** 해당 세탁기가 사용 중입니다. 예약을 추가할 수 있습니다.\n    - **예약 중:** 해당 세탁기가 사용 중이지 않지만, 예약되어 있습니다. 이 경우에도 예약을 추가할 수 있습니다.\n    - **수리 중:** 해당 세탁기가 수리 중으로, 사용할 수 없습니다.\n    \n\n---\n\n1. **시간 설정 화면**\n    \n    \n   \n    \n\n    https://github.com/cypsyco/MadFacility/assets/137145628/f848f309-4575-4b99-8647-428a2314e3b1\n\n\n    <시간 설정 후 시작 동영상>\n    \n    “사용 가능” 세탁기를 선택하면 시간 설정 화면으로 이동하게 됩니다.\n    \n    사용할 시간을 설정한 이후, “사용 시작” 버튼을 누르면 세탁기 사용이 시작되고, 세탁기 선택 화면으로 이동하게 됩니다. 세탁기 선택 화면에서는 세탁이 완료될 때까지 남은 시간을 실시간으로 확인할 수 있습니다.\n    \n    ![KakaoTalk_20240110_202223304_12](https://github.com/cypsyco/MadFacility/assets/137145628/32a4ede2-e094-4cd0-a4f4-cda65bc1ff19)\n    <세탁기 선택 화면 (세탁기 사용 시작 이후)>\n    \n\n---\n\n1. **예약 화면**\n    \n    \n    \n    ![KakaoTalk_20240110_202223304_11](https://github.com/cypsyco/MadFacility/assets/137145628/8b7ef5b3-917d-44cd-be90-fe7c4900c359)\n    <예약 화면>\n    \n    “사용 중” 또는 “예약 중” 세탁기를 선택하면 시간 설정 화면으로 이동하게 됩니다.\n    \n    예약 화면에서는 현재 해당 세탁기를 예약한 사람들의 명단이 보이게 됩니다.\n    \n    “+” 버튼을 누르면, 예약 명단에 사용자가 추가되고, 해당 세탁기를 예약할 수 있습니다.\n    \n    예약한 시간에 따라 예약 순위가 자동으로 설정됩니다.\n    \n    사용 중이거나, 예약 중인 세탁기의 현황은 이후 설명될 프로필 화면에서 확인할 수 있습니다.\n    \n\n---\n\n1. **프로필 화면**\n    \n    \n    \n    ![KakaoTalk_20240110_202223304_16](https://github.com/cypsyco/MadFacility/assets/137145628/ecb317f5-8df9-4294-bba3-068ed5b660eb)\n\n    <프로필 화면>\n    \n    로그인 이후, 상단 메뉴의 좌측 버튼을 누르면 프로필 화면으로 이동할 수 있습니다.\n    \n    해당 화면에서는 4가지 메뉴로 이동할 수 있습니다.\n    \n    - 시설물: 로그인 이후 초기 화면인, 세탁기 & 건조기 화면으로 이동합니다.\n    - 사용 중: 현재 사용 중인 세탁기의 현황을 확인합니다.\n    - 예약 중: 현재 예약 중인 세탁기의 현황을 확인합니다.\n    - 연필 버튼: 사용자의 프로필을 수정할 수 있는 수정 화면으로 이동합니다.\n    \n    하단에는 로그아웃 버튼이 위치해 있습니다.\n    \n\n---\n\n1. **프로필 메뉴 - 사용 중인 세탁기**\n    \n    \n    \n    ![KakaoTalk_20240110_202223304_15](https://github.com/cypsyco/MadFacility/assets/137145628/733f417f-4b1a-4f0a-b60f-194e05092fd2)\n\n    <사용 중인 세탁기 화면>\n    \n    프로필 메뉴에서 사용 중인 세탁기로 이동하면, 현재 사용자가 사용하고 있는 세탁기의 현황을 실시간으로 확인할 수 있습니다.\n    \n    세탁이 종료될 때까지 남은 시간을 확인할 수 있습니다.\n    \n\n---\n\n1. **프로필 메뉴 - 예약 중인 세탁기**\n    \n    \n    ![KakaoTalk_20240110_202223304_14](https://github.com/cypsyco/MadFacility/assets/137145628/006d8af7-e167-4fbf-a0ef-5b541068acde)\n\n    <예약 중인 세탁기 화면>\n    \n    프로필 메뉴에서 예약 중인 세탁기로 이동하면, 현재 사용자가 예약하고 있는 세탁기의 현황을 실시간으로 확인할 수 있습니다.\n    \n    해당 세탁기의 현재 사용이 종료될 때까지 남은 시간을 확인할 수 있고, 사용자 본인의 예약 순번을 확인할 수 있습니다.\n    \n    사용자의 예약 순번이 1인 상태에서 세탁기 사용이 종료되면, 화면이 슬라이드 형식으로 바뀌게 되면서 아래와 같은 창이 나오게 됩니다.\n\n\n   https://github.com/cypsyco/MadFacility/assets/137145628/5ddb0fd5-bf78-4cba-b5f9-5952f520805f\n    <예약 알림 동영상>\n    \n    해당 창에서 “사용 시작” 버튼을 누르면, 즉시 시간 선택 화면으로 이동하게 되고, 바로 세탁기 사용을 시작할 수 있습니다.\n    \n\n---\n\n1. **프로필 메뉴 - 프로필 정보 수정**\n    \n    \n    ![KakaoTalk_20240110_202223304_13](https://github.com/cypsyco/MadFacility/assets/137145628/ca219fc5-f449-4071-a3dc-c18822d21e86)\n\n    <회원 정보 수정 화면>\n    \n    프로필 메뉴에서 회원 정보 수정 화면으로 이동하면, 사용자의 정보를 수정할 수 있습니다.\n    \n    기본적으로 사용자의 ID와 성별은 변경할 수 없고, 사진, 이름, 비밀번호, 그리고 기숙사를 변경할 수 있습니다.\n    \n    회원 정보를 수정할 경우, 기존 비밀번호를 입력해야 합니다. 만약 기존 비밀번호를 맞게 입력하지 않으면, 회원 정보 수정이 거부됩니다.\n",
      "# HereO\n\n![image](https://github.com/Here-O/back/assets/71596178/c288437c-9d96-4127-9171-4773ac430014)\n\n## 프로젝트 소개\n\nFlutter와 Node.js, MongoDB를 사용한 사용자 위치 기반 활동 인증 투두리스트\n\n## 개발환경\n\n- Flutter\n- Node.js\n- MongoDB\n\n## APK 파일\nhttps://drive.google.com/file/d/1Dbu4iUicaLQWGJ8yc1EqdDd-jljKbYSS/view?usp=sharing\n\n## 팀원\n\n양준원 - 카이스트 산업공학과 22학번\n\n한채연 - 숙명여대 IT공학과 20학번\n\n## 주요기능\n\n## 회원가입&로그인\n\n<img src=\"https://github.com/Here-O/back/assets/71596178/9dd2fe1a-2ac8-4c41-908c-eca81c149d9a\" width=\"30%\" height=\"30%\"/>\n<img src=\"https://github.com/Here-O/back/assets/71596178/e4409efa-1f8b-4fa1-83ee-be60be1488be\" width=\"30%\" height=\"30%\"/>\n\n- 회원가입시 이름, 이메일, 비밀번호 입력\n- 사용자를 userEmail로 확인하여, 이전에 가입한 적 있는 이메일이라면 가입 불가\n- 로그인시 이메일과 비밀번호를 입력받아 db에 암호화된 값과 동일한지 판단하고, 동일하다면 jwt 토큰 반환\n- 회원가입과 로그인을 제외한 모든 요청에서, 헤더에 ``Bearer 토큰`‘의  형태로 토큰을 함께 전송\n\n## Map\n\n<img src=\"https://github.com/Here-O/back/assets/71596178/2aff05de-bb6c-4eb7-b62e-8639c090a218\" width=\"30%\" height=\"30%\"/>\n<img src=\"https://github.com/Here-O/back/assets/71596178/10b01c99-68eb-47ff-a97f-3a370e35548f\" width=\"30%\" height=\"30%\"/>\n\n- 네이버 지도 api 벡터 맵\n    - 네이버 지도 api 벡터 맵 띄우기\n    - 내 위치 파란색 동그라미로 띄우기\n    - 초록색 마커로 지정 위치 띄우기\n\n- 위치 정보 검색하기\n    - naver openapi 검색 기능을 활용해 검색어 query 넘겨주면 위치 정보 응답 얻음\n    - 위치 정보 응답을 각각 검색 결과 창에 띄우기\n    \n\n## Todolist\n\n<img src=\"https://github.com/Here-O/back/assets/71596178/bd28cfbb-22e5-4eb9-a45d-3d6a7be2d9ff\" width=\"30%\" height=\"30%\"/>\n<img src=\"https://github.com/Here-O/back/assets/71596178/4145c82a-8533-4d7b-8d17-8c04d5b275bc\" width=\"30%\" height=\"30%\"/>\n<img src=\"https://github.com/Here-O/back/assets/71596178/55e0722a-33c9-406a-aeb2-533312e04e7e\" width=\"30%\" height=\"30%\"/>\n<img src=\"https://github.com/Here-O/back/assets/71596178/e0315c21-e33c-4340-b9a4-a1f0bb907c83\" width=\"30%\" height=\"30%\"/>\n\n\n- 이전 날짜는 노랑, 오늘 날짜는 초록, 내일 이후부터는 회색으로 구분하여 표시\n- Todo 작성시 지도에서 검색한 위치와 내용, 루틴 여부를 함께 작성\n- Todo 내용 수정 기능\n- Todo 인증 기능\n    - 투두 뷰 탭에서 횡 스크롤 액션 취할 시 애니메이션과 함께 맵 탭으로 넘어가며 인증 버튼 띄우기\n    - 현재 사용자 위치와 태그된 위치를 확인한 뒤 300m이내일 경우 `눌러서 인증 완료하기` 버튼 활성화\n    - 벗어난 경우 `더 가깝게 가주세요!`\n\n## My points\n\n<img src=\"https://github.com/Here-O/back/assets/71596178/25542ab4-a700-4e52-a471-f8f120fd2029\" width=\"30%\" height=\"30%\"/>\n<img src=\"https://github.com/Here-O/back/assets/71596178/395ec36d-192f-4593-aacb-48a897898157\" width=\"30%\" height=\"30%\"/>\n\n- 내 이미지 클릭시 갤러리로 이동하여 프로필 사진 변경 가능\n- AWS의 S3를 사용하여 사용자의 이미지 저장\n- 나의 포인트 적립 내역, 총 포인트, 이미지 조회\n- 포인트 상위 5명 유저의 이름, 이미지, 총 포인트, 적립 내역 조회 가능\n",
      null,
      "# Watermelon**: 음악을 나누다 🍉🎶**\n\n### **소개**\n\n---\n\nWatermelon은 음악을 사랑하는 이들을 위한 소셜 음악 공유 플랫폼입니다.\n\n친구들과 함께 음악을 나누고, 특별한 순간을 공유하세요.\n\n피드를 통해 친구들이 등록한 다양한 플레이리스트를 간편하게 찾아들을 수 있습니다.\n\n---\n\n### 팀원\n\n---\n\n- **하준학** KAIST 전산학부 19학번  <a href=\"https://github.com/jannagi\" target=\"_blank\"><img src=\"https://img.shields.io/badge/GitHub-181717?style=flat-square&logo=github&logoColor=white\"></a>\n    \n- **조서윤** 고려대학교 컴퓨터학과 22학번  <a href=\"https://github.com/seoyuncho\" target=\"_blank\"><img src=\"https://img.shields.io/badge/GitHub-181717?style=flat-square&logo=github&logoColor=white\"></a>\n    \n\n---\n\n### 개발 환경\n\n---\n\nIDE: **Android Studio**\n\nFront End: **Java**\n\nBack End: **Node.js**\n\nDataBase: **MySQL / MariaDB**\n\n---\n\n# 앱 기능\n\n### Splash\n\n---\n\n- WaterMelon의 로고 화면을 띄우는 스플래시 화면을 만들었습니다. (2초)\n    \n    ![app_logo.png](https://prod-files-secure.s3.us-west-2.amazonaws.com/f6cb388f-3934-47d6-9928-26d2e10eb0fc/2718863e-6186-4d11-a84d-3c5e9b496687/app_logo.png)\n    \n\n---\n\n### Login & Register\n\n---\n\n**로컬 로그인, 구글 로그인, 카카오 로그인의 세 가지 방식 구현**\n\n- 회원가입시 아이디, 비밀번호, 이름, 나이 정보 입력\n- 로그인해야 앱 이용 가능\n    - 비밀번호 입력시 타인에게 노출되지 못하도록 입력 즉시 보이지 않게 함\n- 구글 로그인, 카카오 로그인의 경우 휴대폰의 구글, 카카오 정보를 자동으로 불러옴\n    - 회원 정보가 있다면 그대로 앱 화면으로 이동\n    - 회원 정보가 없다면 회원가입 창으로 이동\n- ID를 이용해서 사용자를 식별하고, 중복 회원가입 방지\n\n![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/f6cb388f-3934-47d6-9928-26d2e10eb0fc/04359db6-c067-42c3-85d2-6023fbd02b86/Untitled.png)\n\n![KakaoTalk_20240110_201517390.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f6cb388f-3934-47d6-9928-26d2e10eb0fc/1b66fab1-47de-40dd-a2cd-e2f2d06f0f25/KakaoTalk_20240110_201517390.jpg)\n\n![KakaoTalk_20240110_202331895.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f6cb388f-3934-47d6-9928-26d2e10eb0fc/0cf5d401-c514-4b95-a7b4-5f3a882b3333/KakaoTalk_20240110_202331895.jpg)\n\n---\n\n### Tab1 | Home\n\n---\n\n********************친구들의 피드를 볼 수 있는 탭********************\n\n- DB에서 각 사용자별 친구를 불러와서 RecyclerView 형식으로 볼 수 있음\n- 각 친구의 피드를 누르면 그 친구의 플레이리스트를 볼 수 있음\n- 플레이리스트를 클릭하면 Music Player 화면으로 넘어가 노래를 들을 수 있음\n\n![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/f6cb388f-3934-47d6-9928-26d2e10eb0fc/9a9788d0-88ab-4504-a56b-fcff32467b3f/Untitled.png)\n\n![KakaoTalk_20240110_201517390_04.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f6cb388f-3934-47d6-9928-26d2e10eb0fc/8413d21c-ec82-48a4-b46c-88ad73e71a98/KakaoTalk_20240110_201517390_04.jpg)\n\n![KakaoTalk_20240110_201517390_05.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f6cb388f-3934-47d6-9928-26d2e10eb0fc/93ae5806-ba56-4ba0-9d19-c53a3524f040/KakaoTalk_20240110_201517390_05.jpg)\n\n---\n\n### Tab2 | My Page\n\n---\n\n********************개인별 플레이리스트를 볼 수 있는 탭********************\n\n- DB에서 각 사용자별 플레이리스트 (노래 제목과 가수)를 불러와서 RecyclerView 형식으로 볼 수 있음\n- RecyclerView의 각 노래를 클릭하면 Music Player 화면으로 넘어가 노래를 들을 수 있음\n- 우측 상단 버튼을 누르면 역시 DB에서 사용자 정보 (아이디, 비밀번호, 이름, 나이) 불러와서 로그인한 아이디의 정보를 볼 수 있음\n\n![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/f6cb388f-3934-47d6-9928-26d2e10eb0fc/4fb38712-090c-4f8e-91fe-e38ef9e31c65/Untitled.png)\n\n![KakaoTalk_20240110_201517390_02.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f6cb388f-3934-47d6-9928-26d2e10eb0fc/feb34504-9b17-457a-a52f-edf157214def/KakaoTalk_20240110_201517390_02.jpg)\n\n![KakaoTalk_20240110_201517390_01.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f6cb388f-3934-47d6-9928-26d2e10eb0fc/7a15f029-1bad-4727-8a11-32c9eb1a5385/KakaoTalk_20240110_201517390_01.jpg)\n\n---\n\n### Music Player\n\n---\n\n- media player를 이용하여 음악 불러와서 재생 가능\n- 재생, 중지, 빨리감기, 뒤로가기 버튼을 통해 음악 감상 가능\n- seekBar를 통해 음악의 어느 부분을 듣고 있는지 시각적으로 알 수 있음\n\n![KakaoTalk_20240110_201517390_03.jpg](https://prod-files-secure.s3.us-west-2.amazonaws.com/f6cb388f-3934-47d6-9928-26d2e10eb0fc/f6aaef0a-7446-4842-be5d-bf1d051a3208/KakaoTalk_20240110_201517390_03.jpg)\n\n---\n\n### APK\n\n---\n\nhttps://drive.google.com/file/d/1F-u7A4WvJAgtZZRo0XMB7ii2q1bok48d/view?usp=sharing\n\n---\n",
      "\n## CLICK\n\n### 소개\n\n<aside>\n💡 FOLLOW - LIKE - POST\n\n</aside>\n\n---\n\nCLICK 은 자신의 관심사를 포스팅하여 자신만의 페이지를 만들고, 자신의 관심사와 비슷한 사용자를 검색할 수 있습니다. 또한 애플리케이션에 가입한 사용자들의 피드를 확인하고 마음에 드는 게시물에 좋아요를 표시할 수 있는 소셜 네트워크 서비스 기반의 애플리케이션입니다. \n\n### 팀원\n\n---\n\n[정지연](https://www.notion.so/d606c2b8d0b243f0bcd2786496832575?pvs=21) \n\n[sanananan3 - Repositories](https://github.com/sanananan3?tab=repositories)\n\n[박현우](https://www.notion.so/59e39685a4fb45589be212eebbe01cae?pvs=21) \n\n[siesdart - Overview](https://github.com/siesdart)\n\n### 개발 환경\n\n---\n\nLanguage: Dart & JavaScript\n\nFrontend: Flutter\n  - State Management: Riverpod\n\nBackend: Node.js(Express)\n  - DataBase: PostgreSQL\n  - ORM: drizzle\n  - Cloud: Render Web Service & Render PostgreSQL\n\n### **주요 기능**\n\n---\n\n<aside>\n💡 회원가입\n\n</aside>\n\n[Users](https://www.notion.so/b0b20bf5fe3840c5aa53dc15b4a8213d?pvs=21)\n\n 위에서 볼 수 있듯이, 데이터베이스에 users 테이블을 생성해주었다. SERIAL로써 행이 추가될 때 자동으로 증가하는 ID 컬럼을 기본키로 지정해주었다. 또한, user_id와 kakao_id 는 자체 로그인이거나 카카오를 통하여 로그인 할 경우의 ID이다. \n\n 카카오로 로그인을 할 경우에는 user_id가 null값이 될 수 있고, 자체 로그인을 통하여 로그인 할 경우에는 kakao_id가 null값이 될 수 있다. user_pw는 보안을 유지하기 위하여 해싱 과정을 거쳐 저장하였다. \n\n 카카오와 자체 로그인 모두 추가적인 사용자 정보를 얻고 있는데, 그 과정에서 name과 phone, birth_date를 입력해야 한다. created_at 컬럼은 가입한 날짜로써, 데이터가 추가될 때 자동으로 local time이 지정된다. \n\n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/42353949-0769-4971-9537-1b92c78d4555\" width = 20%, height = 20%>\n\n애플리케이션을 실행하면 로그인 화면이 뜸\n\n\n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/e4b8eb68-7e3e-4c7b-86bc-d43f43e935d0\" width = 20%, height = 20%>\n\n회원가입이 되어 있지 않은 사용자의 경우 회원가입을 해야 함 \n\n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/02e153fa-7369-41bd-a73a-cacd28294464\" width = 20%, height = 20%>\n\n\n아이디와 비밀번호는 지정된 자릿수 이상을 입력해야 회원가입을 할 수 있음 \n\n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/0f994afc-5eb9-4886-88a0-a70e9bfd0e72\" width = 20%, height = 20%>\n\n\n\n전화번호는 11자리수이며, 생년월일은 8자리여야 함\n\n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/3b360d22-9787-429c-9aef-ef9f996f0af4\" width = 20%, height = 20%>\n\n\n\n회원가입에 성공하면 프로필 화면이 뜨게 된다. \n\n 앞선 이미지에서 볼 수 있듯이, 회원가입이 되어있지 않은 사용자는 회원가입을 우선적으로 해야한다. 사용자는 카카오톡으로 연동된 로그인과 자체 로그인 2개가 가능하다. 만약 둘 다 회원가입되어있지 않다면, 회원가입 버튼을 눌러 회원가입을 해야한다. ID 및 PW는 글자수 제한이 있으며, 생년월일은 8글자이며 전화번호는 11자리를 입력해야 회원가입에 성공할 수 있다. 회원가입에 성공한다면 바로 프로필 화면으로 넘어가게 되며, 프로필 화면에는 추가 정보에서 입력한 생년월일과 가입한 날짜, 팔로우 및 팔로잉 수, 이름, ID가 뜨게 된다. \n\n<aside>\n💡 로그인\n\n</aside>\n\n \n\n 만약 회원가입이 되어 있는 경우의 사용자라면, 회원가입 버튼을 누르지 않고 바로 로그인으로 넘어갈 수 있다. \n <br>\n \n\n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/e6687889-388d-4921-b829-496ec04d6c7d\" width = 20%, height = 20%>\n\n\n<br>\n회원가입이 되어 있는 사용자의 경우에는 바로 로그인으로 넘어갈 수 있다. \n\n \n\n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/fbaae0d9-e99d-47cf-9396-aaf6eb5b5fe8\" width = 20%, height = 20%>\n <br>\n\n \n로그인을 완료한 사용자의 프로필 페이지가 나온다. \n<br> \n\n\n<aside>\n💡 포스팅\n\n</aside>\n <br>\n\n\n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/6c15f945-c4d1-40fc-91bb-3ae4de67e0b7\" width = 20%, height = 20%>\n\n\n <br>\n\n \n우측 하단의 + 아이콘을 누를 시에 새로운 포스트를 작성할 수 있다. \n\n <br>\n\n \n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/8bb042d4-9f52-4ce8-b0d8-63bf5bc3cab1\" width = 20%, height = 20%>\n <br>\n\n \n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/46de0aab-31dc-4ff4-b5b2-ef7bb2f8ad8f\" width = 20%, height = 20%>\n\n\n\n해당 text field에 자신이 게시하고 싶은 내용을 입력한 후, 게시하기 버튼을 누르면 게시에 성공한다. \n\n해당 이미지와 같이 성공적으로 새로운 포스팅이 완료되었음을 알 수 있다. \n\n<aside>\n💡 검색\n\n</aside>\n\n 검색 탭에서는 유튜브 API를 받아와 현재의 인기 동영상 플레이 리스트를 JSON 형식으로 변환한 뒤 애플리케이션에 띄우게 된다. 스크롤을 당겨 화면을 초기화 할 때마다 인기 동영상에 있는 동영상들이 랜덤으로 재생된다. 또한 아래에는 트위터 실시간 트렌드 창을 만들어 현재의 트렌드를 반영한 키워드들이 뜨게 된다. \n\n 검색 바에는 애플리케이션에 가입한 사용자의 ID 혹은 이름을 부분적으로 검색하여도 하단에 뜨게 되며 해당 텍스트를 누르게 되면 검색한 사용자의 프로필이 뜬다. \n\n <br>\n\n \n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/e2c7906a-e09f-4766-9be1-aff0526a74cb\" width = 20%, height = 20%>\n\n\n\n유튜브 인기 동영상이 뜸 \n <br>\n\n \n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/6b976ac7-e55e-4255-a47f-a70e50b2e777\" width = 20%, height = 20%>\n\n애플리케이션에 가입한 사용자의 ID 혹은 이름을 부분적으로 검색하여도 하단에 뜸\n\n <br>\n\n \n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/6a59274d-145f-4c42-83a6-c7c1a263c01a\" width = 20%, height = 20%>\n\n해당 사용자의 프로필이 뜨게 됨\n\n<aside>\n💡 추천 게시물\n\n</aside>\n <br>\n\n \n\n\n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/d3ff03cd-896d-4cb0-a30f-2de9dc1d8ace\" width = 20%, height = 20%>\n\n\n\n사용자 ‘kickkick’으로 로그인을 하였을 때 메인 탭에는 추천 게시물들이 뜨게 된다. \n\n현재 애플리케이션에 가입한 사용자들이 포스팅 한 게시물들이 뜬다. 해당 게시물에 좋아요를 누를 수 있는 버튼도 존재한다. \n\n<aside>\n💡 좋아요\n\n</aside>\n\n\n추천 게시물들에 뜨는 애플리케이션에 가입한 모든 유저들의 게시물에 좋아요 버튼이 존재하는데, 좋아요 버튼을 누르게 되면 자신의 페이지의 마음에 들어요 함에 해당 게시물이 저장되게 된다.\n\n\n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/37e20c1a-6453-4fa8-86b5-5b4cc806e66f\" width = 20%, height = 20%>\n\n\n\n<br> \n\n\n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/2ef513d6-bd98-48df-b009-84025456dd54\" width = 20%, height = 20%>\n\n\n<aside>\n💡 로그아웃\n\n</aside>\n <br>\n\n \n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/53d4707c-1c8c-4b13-b93b-3f57ab996ff3\" width = 20%, height = 20%>\n우측 상단에 있는 로그아웃 버튼 \n\n <br>\n\n \n<img src = \"https://github.com/sanananan3/madweek2/assets/127393132/8ad8b399-0126-4d08-8831-bc890ca21154\" width = 20%, height = 20%>\n\n\n로그아웃 버튼을 누르게 되면 로그아웃에 대한 다이얼로그가 뜨게 된다. \n\n모든 탭의 우측 상단에 존재하는 로그아웃 버튼을 누르게 되면, 로그아웃을 실행하겠냐는 Alert Dialog가 뜨게 되고, 해당 버튼을 누르게 되면 로그인 화면 창으로 되돌아가게 된다. \n\n### 스크럼\n\n### 1) 2024/01/04\n\n**진행 상황** \n\nflutter + mongodb + nodejs \n\nGitHub 레포지토리를 생성하였고, 각자의 branch 를 생성함\n\n안드로이드 스튜디오에 Flutter 개발 환경을 구축함\n\nTab 5개를 만들었음 \n\n**To do**\n\n애플리케이션을 처음으로 실행했을 때 로그인 화면 구현 \n\n카카오톡 로그인과 자체 로그인 2개 구현하기 \n\nTab 1에 프로필 화면 구현하기 \n\n### 2) 2024/01/05\n\n**진행 상황**\n\nmongodb → postgresql\n\n모바일: 자체 회원가입 카카오톡 회원가입 UI 및 기능 구현\n\n서버: 각 회원가입 요청이 오면 body를 받아 계정을 생성해 DB에 넣는 기능 구현\n\n**To do**\n\n회원가입한 정보를 바탕으로 프로필 페이지 UI 그리기 ⇒ Tab 1에 프로필 정보 불러오려고 했으나 회원가입 페이지에서 tab1 으로 넘어가지가 않음.. .. . . .. . \n\n이미 앱에서 회원가입을 했었으면 앱 실행시 회원가입 스킵하고 자동으로 로그인 정보 불러오도록 하기\n\n### 3) 2024/01/06\n\n**진행 상황**\n\n모바일: 프로필 UI 그리기, Tab 1 페이지에 프로필과 하단 Tab Bar 생성하여 게시물과 좋아요한 게시물이 list view 로써 나타나게 함 + 게시물을 작성할 수 있는 페이지 만듬 \n\n서버: 로그인 및 로그인 정보 저장\n\n**To do**\n\n게시하기 버튼 눌렀을 때 데이터 베이스에 사용자 name 별로 content가 생성되어서 로그인 했을 때 Tab1의 게시물에 뜨게하기\n\n### 4) 2024/01/07\n\n**진행 상황**\n\n게시물 작성 및 내 게시물 보기 구현\n\nTab 2에 검색 기능 추가하고 실제 트위터처럼 실시간 인기동영상을 유튜브 api 를 통하여 가져옴 \n\n**To do**\n\n게시물 수정 / 삭제 및 팔로우 / 좋아요 등 기능 추가\n\n검색 기능에 실제 데이터 베이스에서 회원가입한 사용자의 정보를 검색할 수 있게 하기\n\n### 5) 2024/01/10\n\n**진행 상황**\n\n검색 기능에 실제 데이터 베이스에서 회원가입한 사용자의 정보를 검색할 수 있게 함\n\n게시물 수정 / 삭제 기능 구현\n\n다른 사람이 작성한 최신 트윗 리스트 구현\n\n**To do**\n\n팔로우 / 좋아요 기능 추가 및 버그 / 오류 있는지 확인하고 수정\n\nREAD.ME 작성 및 노션 작성, 발표 \n\n---\n",
      "# 발자국\n<img src=\"https://github.com/sunnygeem/madcamp_week2/assets/51894747/55eef5df-08a7-48fc-970e-bc5d10a07314\" width=\"10%\" height=\"10%\">\n\n발자국에서 나만의 산책로를 업데이트하고 다른 사람들이 등록한 산책로를 직접 걸어보세요!\n\n---\n\n## 개발 환경\n\n**Front-end** `flutter`\n\n**Back-end/** `nodejs`, `aws`(server), `mysql`(db)\n\n---\n\n## 팀원\n\n[박강태](https://www.notion.so/3c906b5d84de4a73b555e1dd539b35ce?pvs=21)\n\n[김선희](https://www.notion.so/553d94906edd4ba99d228ed8d2d49353?pvs=21) \n\n---\n\n## DB 구성\n\n**user**\n\n| user_email | user_name | user_nickname |\n| --- | --- | --- |\n| varchar | varchar | varchar |\n\n**trail:** 산책로 정보\n\n| trail_name | user_email |\n| --- | --- |\n| varchar | varchar |\n\n_**poisition:** 산책로 checkpoint\n\n| trail_name | location1 | location2 | location3 | location4 | location5 |\n| --- | --- | --- | --- | --- | --- |\n| varchar | varchar | varchar | varchar | varchar | varchar |\n\n**review:** 다른 사용자 리뷰\n\n| trail_name | review | rev_nickname |\n| --- | --- | --- |\n| varchar | varchar | varchar |\n\n---\n\n## 앱 구성\n\n‘발자국’은 google API를 연동하여 gmail로 로그인 및 회원가입 할 수 있습니다.\n\n총 3가지 Tab으로 구성되어 있습니다.\n\n---\n\n### Tab 1: 산책로 추가하기\n\n**[overview]**\n\n<img src=\"https://github.com/sunnygeem/madcamp_week2/assets/51894747/e1d31dcb-6afc-4b07-9d59-150abfdacb90\" width=\"30%\" height=\"30%\">\n\n<img src=\"https://github.com/sunnygeem/madcamp_week2/assets/51894747/0fbea0ab-d576-4100-8337-58da5ab9c02f\" width=\"30%\" height=\"30%\">\n\n**[기능]**\n\n- Pin 아이콘을 터치하여 현재 위치 정보 수집 권한을 허용한 후 현재 위치의 주소를 확인합니다.\n- 버튼을 터치하면 google map이 켜집니다.\n    - 30초마다 marker를 생성하면서 실시간으로 위치를 업데이트 합니다.\n    - 각 marker를 잇는 polyline을 그려서 경로 파악할 수 있습니다.\n    - 상단에 산책로의 이름을 설정하고 SAVE 버튼을 누르면 데이터베이스에 나만의 산책로가 등록됩니다. (데이터베이스의 용량으로 인해 전체 경로를 5등분 하여 checkpoint만 등록)\n\n---\n\n### Tab 2: 산책로 리스트\n\n********************[overview]********************\n\n<img src=\"https://github.com/sunnygeem/madcamp_week2/assets/51894747/18b2e560-03ee-4099-a9c6-c335ddfa29f8\" width=\"30%\" height=\"30%\">\n\n<img src=\"https://github.com/sunnygeem/madcamp_week2/assets/51894747/c9dad68b-d183-478c-9379-90af50946505\" width=\"30%\" height=\"30%\">\n\n****************[기능]****************\n\n- 데이터베이스에 등록된 산책로 리스트를 볼 수 있습니다.\n    - 등록자와 등록자가 설정한 산책로 이름을 볼 수 있습니다.\n- 각 리스트를 터치하면 dialog 창이 떠서 산책로를 볼 수 있고 리뷰를 작성 및 확인할 수 있습니다.\n    - 데이터베이스에 등록된 5개의 checkpoint를 불러와서 다시 지도에 marker를 생성한 후 polyline을 그려줍니다.\n    - 리뷰를 작성하면 리뷰 작성자와 리뷰 내용이 담긴 listview가 업데이트 됩니다. (데이터베이스의 용량으로 인해 15자 글자수 제한)\n\n---\n\n### Tab 3: 내 프로필 확인 및 수정\n\n**[overview]**\n\n<img src=\"https://github.com/sunnygeem/madcamp_week2/assets/51894747/27bd9840-251b-4975-a27c-8c9ea272bdaf\" width=\"30%\" height=\"30%\">\n\n<img src=\"https://github.com/sunnygeem/madcamp_week2/assets/51894747/2db082f1-fb6c-473e-a7f7-2dda3ef654c4\" width=\"30%\" height=\"30%\">\n\n**[기능]**\n\n- 내 프로필을 확인할 수 있습니다.\n    - 로그인에 사용한 gmail과 google에 설정된 내 이름이 보입니다.\n- 프로필 수정 버튼을 통해서 다른 사람에게 보여지는 닉네임을 수정할 수 있습니다.\n\n---\n\n## 추가할 사항\n\n- 프로필 사진을 설정하는 기능\n- 산책로 등록하는 중에 카페나 사진 스팟이 있다면 checkpoint를 따로 설정해 추가하는 기능\n- 산책로 리스트 정렬 기능 (리뷰 개수 순서, 등록 날짜 순서 등)\n",
      "# Mr. 길버트\n![대지 1 사본 5](https://github.com/naco0406/traveler/assets/129248939/d695c529-de91-4a4b-aceb-9752a5047f25)\n![대지 1_4](https://github.com/naco0406/traveler/assets/129248939/7b8a55ba-b38d-4c19-8a7d-04fd58aa6d24)\n\n## 💻 프로젝트 개요\n\n인터넷 속에 흩어진 정보들을 일일히 조합하여 여행 계획을 세우셨나요? 그런 불편함을 해결해줄 앱을 소개합니다!\n\n- 본인만의 여행 경로 만들기\n- 다른 사람들의 여행 경로 공유 게시판\n\n## 👫 팀원\n\n양혜민 - DGIST 컴퓨터공학과 20학번\n\n고영 - 카이스트 전산학부 21학번\n\n## 개발환경\n\n- IDE : Android Studio\n- Front : Kotlin\n- Server : Flask\n- Database : mongoDB\n- SDK : Naver\n\n---\n\n## 주요 기능 소개\n\n### Main 화면\n<p align=\"center\", width=\"100%\">\n  <img width=\"30%\" height=\"30%\" alt=\"자산 17@2x\" src=\"https://github.com/naco0406/traveler/assets/129248939/68910b05-ed7b-4be2-acee-79730f33f516\">\n\n</p>\n- 현재 인기 있는 여행지(도시, 장소)들을 한눈에 살펴볼 수 있습니다.\n    - 관심있는 여행지를 선택하면 여행 경로 추천 게시글 탭으로 이동합니다.\n- 하단에 나의 여행 정보를 담고 있는 탭이 있으며, 위로 스크롤해서 올리면 어떤 여행 경로를 계획하고 있는지 살펴볼 수 있습니다.\n\n### 로그인 & 회원가입 기능\n\n<img width=\"30%\" height=\"30%\" alt=\"자산 15@2x\" src=\"https://github.com/naco0406/traveler/assets/129248939/55b05b71-01e4-4767-a7ab-0070acda2b44\">\n\n<로그인>\n- 자체 로그인, 네이버 로그인을 할 수 있는 기능을 구현하였습니다.\n- 로그인 정보가 일치하지 않으면 로그인 실패 창이 뜨며 사용자에게 해당 사실을 알립니다.\n- 회원 가입 텍스트를 클릭하면 회원가입 창으로 넘어갑니다.\n- 로그인에 성공할 경우, 자동적으로 마이페이지로 넘어갑니다. 또한 하단에 나만의 여행 경로를 설정할 수 있는 탭이 추가됩니다.\n\n<회원가입>\n\n- 자체 회원가입, 네이버 로그인을 통한 회원가입 기능을 구현하였습니다.\n- 회원가입을 완료하면 회원가입 성공 알림창이 뜹니다.\n\n### 마이페이지\n<img width=\"30%\" height=\"30%\" alt=\"자산 14@2x\" src=\"https://github.com/naco0406/traveler/assets/129248939/d0391a93-a2fc-4077-9b64-35e47ccabe30\">\n\n- 사용자의 이름, 닉네임, 핸드폰 정보를 확인할 수 있습니다.\n- 각 텍스트를 길게 누르면 editText가 생성되면서 사용자가 수정할 수 있고, 옆에 수정 완료 버튼을 누르면 수정된 내용으로 업데이트 됩니다.\n- 로그아웃 버튼을 누르면 다시 로그인 페이지로 돌아가게 됩니다.\n\n### 여행 경로 추천 게시판\n<p align=\"center\", width=\"100%\">\n  <img width=\"30%\" height=\"30%\" alt=\"자산 16@2x\" src=\"https://github.com/naco0406/traveler/assets/129248939/4211532e-cc76-474c-a42c-46ec043ade66\">\n  <img width=\"30%\" height=\"30%\" alt=\"자산 12@2x\" src=\"https://github.com/naco0406/traveler/assets/129248939/5320a8d3-2e56-400f-95e9-83456eb1e93b\">\n\n</p>\n- 사용자들이 실제로 경험해본, 자신만의 여행 경로들이 게시판에 추천순대로 보여집니다.\n- 상단의 검색창에 도시 이름이나 여행지의 태그에 해당되는 키워드를 입력하면 그에 맞게 필터링된 글들만 보이게 됩니다.\n- 오른쪽 상단에 필터 버튼을 누르면 내가 계획하는 여행 인원, 기간을 입력할 수 있고, 그에 맞는 게시물들이 보여집니다.\n- 새로 고침 버튼을 누르면 필터 기능이 사라지고, 모든 게시물들이 추천순대로 보여집니다.\n  \n<img width=\"30%\" height=\"30%\" alt=\"자산 11@2x\" src=\"https://github.com/naco0406/traveler/assets/129248939/8b2ff7d7-d53a-4a48-92c2-9ac4fd1c46cd\">\n\n- 사용자가 관심있는 여행경로 게시물을 선택하면, 추천 경로에 대한 자세한 정보가 담긴 페이지로 이동합니다.\n    - 해당 페이지에서 여행 경로가 마음에 들 경우, 하단 버튼을 눌러 나만의 여행 경로에 추가해줍니다.\n\n### 나만의 여행 경로 설정하기\n<p align=\"center\", width=\"100%\">\n  <img width=\"30%\" height=\"30%\" alt=\"자산 13@2x\" src=\"https://github.com/naco0406/traveler/assets/129248939/abb52038-27f0-4e3e-97da-a9da76ecb7a8\">\n  <img width=\"30%\" height=\"30%\" alt=\"자산 10@2x\" src=\"https://github.com/naco0406/traveler/assets/129248939/3f928236-6ad1-4b45-b499-e7fbe16b5e1b\">\n</p>\n\n- 추천 여행 경로 중에서 import를 통해 나만의 여행 경로에 쉽게 추가하거나, 장소 추가 버튼을 통해 직접 장소를 검색하여 추가할 수 있습니다.\n- 내가 추가한 여행지가 상단의 지도에 표시되어 경로의 효율성을 한눈에 살펴볼 수 있습니다.\n- 저장을 누르면 나만의 여행 경로 설정이 완료되며, 데이터 베이스에 저장됩니다.\n\n[APK 다운로드](https://drive.google.com/file/d/1y2uudgB_FZTviuNIXBMxhaGnlkO2WY5V/view?usp=sharing)\n\n\n### 나만 보기 아까운 애니메이션 모음\n\n\nhttps://github.com/naco0406/traveler/assets/129248939/8b3d1b74-a326-40a4-9c8f-e0ca55d38523\n\n\nhttps://github.com/naco0406/traveler/assets/129248939/2e1f2c5b-67ec-4384-b1d3-e27dec23112b\n\n\n\n",
      "# Travel Together\nTravel Together 프론트엔드 Github\n\nTravel Together 서버 및 데이터베이스 Github https://github.com/lha0/lhy_nsh_back.git\n\n---\n\n### 혼여행러들을 위한 여행 동행 구하기 앱\n\n> 게시판을 통해 원하는 여행지와 일정을 확인하고, 해당 게시물을 올린 사람에게 채팅을 보낼 수 있습니다\n> \n\n> 채팅 기능을 통해 직접 대화하고 일정을 정할 수 있습니다.\n> \n\n> 채팅을 통해 동행을 확정하면, 리뷰를 쓸 수 있는 탭이 생기고 해당 탭에서 리뷰를 작성하면 사용자에게 쌓인 리뷰가 업데이트됩니다.\n> \n\n---\n\n### 개발 팀원\n\n- 이하영 - UNIST 컴퓨터공학과 20학번\n- 남승훈 - UNIST 전산학부 22학번\n\n---\n\n## 개발 스택\n\n- Kotlin\n- Android Studio\n- Figma\n\n## 앱 제작 배경\n\n---\n\n- 친구들끼리 가면 더할 나위 없겠지만, 경제적으로, 시간적으로 부담이 될 수 있는 유럽 여행은 혼자 또는 둘이 가는 경우가 많다.\n- 따라서 서로 사진을 찍어주거나 맛있는 식당(주로 2인 이상 가능한)에 가기 위해 동행을 구한다.\n- 기존에 여행 동행을 구하는 시스템은 유명한 여행 네이버 카페인 유랑에서 진행되지만, 주로 따로 오픈 채팅방 링크를 올려야해서 불편한 문제가 있었다.\n- 또한, 만약 오픈 채팅방 링크로 약속을 잡는다면 외부 공간으로 이동해야하기 때문에 범죄가 잃어나거나 난처한 상황이 생겨도 책임지기가 어렵다.\n- **이에, 사용자의 편의 증가 + 안전성 확보를 위해 여행 동행을 구하는 전체 과정을 수행할 수 있는 앱을 제작하고자 하였다.**\n\n## 앱 기능\n\n---\n\n### 로그인\n\n- Google 소셜 로그인 구현\n    - `Google API` 활용\n- 로그인 성공 시 `JWT 토큰`을 발급하도록 하고, 앱 사용중에 사용자 정보를 불러올 때는 이 토큰을 활용해서 정보를 불러오도록 구현하였다\n    - 보안성 확보\n\n### 회원가입\n\n- 데이터베이스에 사용자 정보가 존재하지 않을 시, 회원가입 진행\n\n\n### Posts\n\n- Database 내 저장된 게시글 정보들을 `Recyclerview`로 보여준다.\n- 검색 및 필터링 기능 구현\n- 게시글을 클릭 시 해당 게시글로 이동\n    - 데이터베이스에서 해당 게시글에 대한 정보 (작성자, 사진, 제목, 날짜, 본문 등)을 띄어줌\n- 채팅하기 버튼을 클릭하면 채팅액티비티로 전환\n\n\n### Chatting\n\n- `Stream chat sdk` 활용해 구현\n    - 로그인된 유저의 JWT토큰을 통해 유저 인식\n    - 게시글을 작성한 사람의 ID를 넘겨 1:1 채팅방 생성\n- 게시글에서 채팅하기를 누르면, 채팅창으로 넘어오는데, 게시글을 작성한 사람과의 채팅방이 자동으로 생성되도록 하였다.\n- 채팅방 헤더의 채팅 상대의 프로필을 클릭하면, `동행을 확정하시겠습니까?` 라는 AlertDialog가 띄어짐\n    - 동행 확정 페이지로 이동 및 동행 확정 가능\n- 동행을 확정하면, 해당 Dialog가 `리뷰를 작성하시겠습니까?`로 변경 및 리뷰 작성 가능\n    - 리뷰 작성 시, 상대의 데이터베이스에 리뷰 저장 및 마이페이지 리뷰 업데이트\n\n\n### Recommendation\n\n- 카테고리를 이용하여 분류하였고, 각 질문에 답변하는 카테고리에 맞는 여행지 추천 제공\n- 동행자 찾기 버튼을 클릭 시 첫번째 탭인 게시글 탭으로 연결\n\n### My Page\n\n- 로그인된 사용자의 정보를 볼 수 있는 탭\n- 프로필 사진과 본인의 신분을 증명하는 신분증 사진을 업로드 가능\n- 토큰을 이용하여 사용자의 정보를 데이터베이스에서 불러옴\n"
    ]
  }
}